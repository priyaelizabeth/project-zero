3.2.6 (Media Mark)
3a0b05c8d48c07eae82eceb6571578ab9de3cd5e
o:Sass::Tree::RootNode
:@template"´(//
// Global Foundation Mixins
//

$experimental: true !default;

// We use this to control border radius.
@mixin radius($radius:$global-radius) {
  @if $radius {
    @if $experimental {
      -webkit-border-radius: $radius;
    }
    border-radius: $radius;
  }
}

// We use this to create equal side border radius on elements.
@mixin side-radius($side, $radius:$global-radius) {
  @if $side == left {
    @if $experimental {
      -moz-border-radius-bottomleft: $radius;
      -moz-border-radius-topleft: $radius;
      -webkit-border-bottom-left-radius: $radius;
      -webkit-border-top-left-radius: $radius;
    }
    border-bottom-left-radius: $radius;
    border-top-left-radius: $radius;
  }
  @else if $side == right {
    @if $experimental {
      -moz-border-radius-topright: $radius;
      -moz-border-radius-bottomright: $radius;
      -webkit-border-top-right-radius: $radius;
      -webkit-border-bottom-right-radius: $radius;
    }
    border-top-right-radius: $radius;
    border-bottom-right-radius: $radius;
  }
  @else if $side == top {
    @if $experimental {
      -moz-border-radius-topright: $radius;
      -moz-border-radius-topleft: $radius;
      -webkit-border-top-right-radius: $radius;
      -webkit-border-top-left-radius: $radius;
    }
    border-top-right-radius: $radius;
    border-top-left-radius: $radius;
  }
  @else if $side == bottom {
    @if $experimental {
      -moz-border-radius-bottomright: $radius;
      -moz-border-radius-bottomleft: $radius;
      -webkit-border-bottom-right-radius: $radius;
      -webkit-border-bottom-left-radius: $radius;
    }
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
  }
}

// We can control whether or not we have inset shadows edges.
@mixin inset-shadow($active:true) {
  @if $experimental {
    -webkit-box-shadow: $shiny-edge-size $shiny-edge-color inset;
  }
  box-shadow: $shiny-edge-size $shiny-edge-color inset;

  @if $active { &:active {
    @if $experimental {
      -webkit-box-shadow: $shiny-edge-size $shiny-edge-active-color inset;
    }
    box-shadow: $shiny-edge-size $shiny-edge-active-color inset; } }
}

// We use this to add transitions to elements
@mixin single-transition($property:all, $speed:300ms, $ease:ease-out) {
  @if $experimental {
    -webkit-transition: $property $speed $ease;
    -moz-transition: $property $speed $ease;
  }
  transition: $property $speed $ease;
}

// We use this to add box-sizing across browser prefixes
@mixin box-sizing($type:border-box) {
  @if $experimental {
    -moz-box-sizing: $type;
    -webkit-box-sizing: $type;
  }
  box-sizing: $type;
}

// We use this to create equilateral triangles
@mixin css-triangle($triangle-size, $triangle-color, $triangle-direction) {
  content: "";
  display: block;
  width: 0;
  height: 0;
  border: inset $triangle-size;
  @if ($triangle-direction == top) {
    border-color: $triangle-color transparent transparent transparent;
    border-top-style: solid;
  }
  @if ($triangle-direction == bottom) {
    border-color: transparent transparent $triangle-color transparent;
    border-bottom-style: solid;
  }
  @if ($triangle-direction == left) {
    border-color: transparent transparent transparent $triangle-color;
    border-left-style: solid;
  }
  @if ($triangle-direction == right) {
    border-color: transparent $triangle-color transparent transparent;
    border-right-style: solid;
  }
}

// We use this to do clear floats
@mixin clearfix() {
  *zoom:1;
  &:before, &:after { content: " "; display: table; }
  &:after { clear: both; }
}


// We use this to add a glowing effect to block elements
@mixin block-glowing-effect($selector:focus, $fade-time:300ms, $glowing-effect-color:fade-out($primary-color, .25)) {
  @if $experimental {
    -webkit-transition: -webkit-box-shadow $fade-time, border-color $fade-time ease-in-out;
    -moz-transition: -moz-box-shadow $fade-time, border-color $fade-time ease-in-out;
  }
  transition: box-shadow $fade-time, border-color $fade-time ease-in-out;

  &:#{$selector} {
    @if $experimental {
      -webkit-box-shadow: 0 0 5px $glowing-effect-color;
      -moz-box-shadow: 0 0 5px $glowing-effect-color;
    }
    box-shadow: 0 0 5px $glowing-effect-color;
    border-color: $glowing-effect-color;
  }
}

//
// Foundation Variables
//

// The default font-size is set to 100% of the browser style sheet (usually 16px)
// for compatibility with brower-based text zoom or user-set defaults.

// Since the typical default browser font-size is 16px, that makes the calculation for grid size.
// If you want your base font-size to be different and not have it effect the grid breakpoints,
// set $em-base to $base-font-size and make sure $base-font-size is a px value.
$base-font-size: 100% !default;

// $base-line-height is 24px while $base-font-size is 16px
$base-line-height: 150% !default;

// This is the default html and body font-size for the base em value.
$em-base: 16 !default;

// It strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// Converts "px" to "em" using the ($)em-base
@function convert-to-em($value)  {
  $value: strip-unit($value) / strip-unit($em-base) * 1em;
  @if ($value == 0em) { $value: 0; } // Turn 0em into 0
  @return $value;
}

// Working in ems is annoying. Think in pixels by using this handy function, emCalc(#)
// Just enter the number, no need to mention "px"
@function emCalc($values...) {
  $max: length($values); // Get the total number of parameters passed

  // If there is only 1 parameter, then return it as an integer.
  // This is done because a list can't be multiplied or divided even if it contains a single value
  @if $max == 1 { @return convert-to-em(nth($values, 1)); }

  $emValues: (); // This will eventually store the converted $values in a list
  @for $i from 1 through $max {
    $emValues: append($emValues, convert-to-em(nth($values, $i)));
  }
  @return $emValues;
}

// Maybe you want to create rems and pixels
// @function remCalc($pxWidth) {
//   @return $pxWidth / $em-base * 1rem;
// }

// We use these to control various global styles
$body-bg: #fff !default;
$body-font-color: #222 !default;
$body-font-family: "Helvetica Neue", "Helvetica", Helvetica, Arial, sans-serif !default;
$body-font-weight: normal !default;
$body-font-style: normal !default;

// We use this to control font-smoothing
$font-smoothing: subpixel-antialiased !default;

// We use these to control text direction settings
$text-direction: ltr !default;

// NOTE: No need to change this conditional statement, $text-direction variable controls it all.
$default-float: left !default;
$opposite-direction: right !default;
@if $text-direction == ltr {
  $default-float: left;
  $opposite-direction: right;
} @else {
  $default-float: right;
  $opposite-direction: left;
}

// We use these as default colors throughout
$primary-color: #2ba6cb !default;
$secondary-color: #e9e9e9 !default;
$alert-color: #c60f13 !default;
$success-color: #5da423 !default;

// We use these to make sure border radius matches unless we want it different.
$global-radius: 3px !default;
$global-rounded: 1000px !default;

// We use these to control inset shadow shiny edges and depressions.
$shiny-edge-size: 0 1px 0 !default;
$shiny-edge-color: rgba(#fff, .5) !default;
$shiny-edge-active-color: rgba(#000, .2) !default;

// We use this to control whether or not CSS classes come through in the gem files.
$include-html-classes: true !default;
$include-print-styles: true !default;
$include-html-global-classes: $include-html-classes !default;

// Media Queries
$small-screen: 768px !default;
$medium-screen: 1280px !default;
$large-screen: 1440px !default;

$screen: "only screen" !default;
$small: "only screen and (min-width: #{$small-screen})" !default;
$medium: "only screen and (min-width:#{$medium-screen})" !default;
$large: "only screen and (min-width:#{$large-screen})" !default;
$landscape: "only screen and (orientation: landscape)" !default;
$portrait: "only screen and (orientation: portrait)" !default;

//We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet
$cursor-crosshair-value: crosshair !default;
$cursor-default-value: default !default;
$cursor-pointer-value: pointer !default;
$cursor-help-value: help !default;
$cursor-text-value: text !default;


@if $include-html-global-classes {

  // Set box-sizing globally to handle padding and border widths
  *,
  *:before,
  *:after {
    @include box-sizing(border-box);
  }

  html,
  body { font-size: $base-font-size; }

  // Default body styles
  body {
    background: $body-bg;
    color: $body-font-color;
    padding: 0;
    margin: 0;
    font-family: $body-font-family;
    font-weight: $body-font-weight;
    font-style: $body-font-style;
    line-height: 1; // Set to $base-line-height to take on browser default of 150%
    position: relative;
    cursor: $cursor-default-value;
  }

a:hover { cursor: $cursor-pointer-value; }

  // Override outline from normalize, we don't like it
  a:focus { outline: none; }

  // Grid Defaults to get images and embeds to work properly
  img,
  object,
  embed { max-width: 100%; height: auto; }

  object,
  embed { height: 100%; }
  img { -ms-interpolation-mode: bicubic; }

  #map_canvas,
  .map_canvas {
    img,
    embed,
    object { max-width: none !important;
    }
  }

  // Miscellaneous useful HTML classes
  .left         { float: left !important; }
  .right        { float: right !important; }
  .text-left    { text-align: left !important; }
  .text-right   { text-align: right !important; }
  .text-center  { text-align: center !important; }
  .text-justify { text-align: justify !important; }
  .hide         { display: none; }

  // Font smoothing
  // Antialiased font smoothing works best for light text on a dark background.
  // Apply to single elements instead of globally to body.
  // Note this only applies to webkit-based desktop browsers on the Mac.
  .antialiased { -webkit-font-smoothing: antialiased; }

  // Get rid of gap under images by making them display: inline-block; by default
  img {
    display: inline-block;
    vertical-align: middle;
  }

  //
  // Global resets for forms
  //

  // Make sure textarea takes on height automatically
  textarea { height: auto; min-height: 50px; }

  // Make select elements 100% width by default
  select { width: 100%; }

}
:@has_childrenT:@options{ :@children[Uo:Sass::Tree::CommentNode
:
@type:silent:@value[")/*
 * Global Foundation Mixins
 * */;@;	[ :
@lineio:Sass::Tree::VariableNode:@guarded"!default:
@name"experimental:
@expro:Sass::Script::Bool;T;@;i
;@;	[ ;i
o;

;;;["0/* We use this to control border radius. */;@;	[ ;io:Sass::Tree::MixinDefNode;"radius;T;@;	[u:Sass::Tree::IfNodeó[o:Sass::Script::Variable	:
@name"radius:@underscored_name"radius:@options{ :
@linei0[u:Sass::Tree::IfNodeø[o:Sass::Script::Variable	:
@name"experimental:@underscored_name"experimental:@options{ :
@linei0[o:Sass::Tree::PropNode;["-webkit-border-radius:@valueo; 	;"radius;"radius;@	;	i:@prop_syntax:new;@	:
@tabsi :@children[ ;	io:Sass::Tree::PropNode;["border-radius:@valueo; 	;"radius;"radius;@	;	i:@prop_syntax:new;@	:
@tabsi :@children[ ;	i:@splat0;i:
@args[[o:Sass::Script::Variable;"radius:@underscored_name"radius;@o;	;"global-radius;"global_radius;@;io;

;;;["F/* We use this to create equal side border radius on elements. */;@;	[ ;io;;"side-radius;T;@;	[u;õ[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"	left:@options{ :
@linei:@operand1o:Sass::Script::Variable	:
@name"	side:@underscored_name"	side;@	;i;@	:@operator:eq;iu:Sass::Tree::IfNodeú[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"
right:@options{ :
@linei":@operand1o:Sass::Script::Variable	:
@name"	side:@underscored_name"	side;@	;i";@	:@operator:eq;i"u:Sass::Tree::IfNodeø[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"top:@options{ :
@linei,:@operand1o:Sass::Script::Variable	:
@name"	side:@underscored_name"	side;@	;i,;@	:@operator:eq;i,u:Sass::Tree::IfNode[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"bottom:@options{ :
@linei6:@operand1o:Sass::Script::Variable	:
@name"	side:@underscored_name"	side;@	;i6;@	:@operator:eq;i60[u:Sass::Tree::IfNode![o:Sass::Script::Variable	:
@name"experimental:@underscored_name"experimental:@options{ :
@linei70[	o:Sass::Tree::PropNode;["#-moz-border-radius-bottomright:@valueo; 	;"radius;"radius;@	;	i8:@prop_syntax:new;@	:
@tabsi :@children[ ;	i8o;
;[""-moz-border-radius-bottomleft;o; 	;"radius;"radius;@	;	i9;;;@	;i ;[ ;	i9o;
;["'-webkit-border-bottom-right-radius;o; 	;"radius;"radius;@	;	i:;;;@	;i ;[ ;	i:o;
;["&-webkit-border-bottom-left-radius;o; 	;"radius;"radius;@	;	i;;;;@	;i ;[ ;	i;o:Sass::Tree::PropNode;["border-bottom-right-radius;
o;	;"radius;"radius;@	;i=:@prop_syntax:new;@	:
@tabsi :@children[ ;i=o;;["border-bottom-left-radius;
o;	;"radius;"radius;@	;i>;;;@	;i ;[ ;i>[u;[o:Sass::Script::Variable	:
@name"experimental:@underscored_name"experimental:@options{ :
@linei-0[	o:Sass::Tree::PropNode;[" -moz-border-radius-topright:@valueo; 	;"radius;"radius;@	;	i.:@prop_syntax:new;@	:
@tabsi :@children[ ;	i.o;
;["-moz-border-radius-topleft;o; 	;"radius;"radius;@	;	i/;;;@	;i ;[ ;	i/o;
;["$-webkit-border-top-right-radius;o; 	;"radius;"radius;@	;	i0;;;@	;i ;[ ;	i0o;
;["#-webkit-border-top-left-radius;o; 	;"radius;"radius;@	;	i1;;;@	;i ;[ ;	i1o:Sass::Tree::PropNode;["border-top-right-radius;
o;	;"radius;"radius;@	;i3:@prop_syntax:new;@	:
@tabsi :@children[ ;i3o;;["border-top-left-radius;
o;	;"radius;"radius;@	;i4;;;@	;i ;[ ;i4[u;[o:Sass::Script::Variable	:
@name"experimental:@underscored_name"experimental:@options{ :
@linei#0[	o:Sass::Tree::PropNode;[" -moz-border-radius-topright:@valueo; 	;"radius;"radius;@	;	i$:@prop_syntax:new;@	:
@tabsi :@children[ ;	i$o;
;["#-moz-border-radius-bottomright;o; 	;"radius;"radius;@	;	i%;;;@	;i ;[ ;	i%o;
;["$-webkit-border-top-right-radius;o; 	;"radius;"radius;@	;	i&;;;@	;i ;[ ;	i&o;
;["'-webkit-border-bottom-right-radius;o; 	;"radius;"radius;@	;	i';;;@	;i ;[ ;	i'o:Sass::Tree::PropNode;["border-top-right-radius;
o;	;"radius;"radius;@	;i):@prop_syntax:new;@	:
@tabsi :@children[ ;i)o;;["border-bottom-right-radius;
o;	;"radius;"radius;@	;i*;;;@	;i ;[ ;i*[u;[o:Sass::Script::Variable	:
@name"experimental:@underscored_name"experimental:@options{ :
@linei0[	o:Sass::Tree::PropNode;[""-moz-border-radius-bottomleft:@valueo; 	;"radius;"radius;@	;	i:@prop_syntax:new;@	:
@tabsi :@children[ ;	io;
;["-moz-border-radius-topleft;o; 	;"radius;"radius;@	;	i;;;@	;i ;[ ;	io;
;["&-webkit-border-bottom-left-radius;o; 	;"radius;"radius;@	;	i;;;@	;i ;[ ;	io;
;["#-webkit-border-top-left-radius;o; 	;"radius;"radius;@	;	i;;;@	;i ;[ ;	io:Sass::Tree::PropNode;["border-bottom-left-radius;
o;	;"radius;"radius;@	;i:@prop_syntax:new;@	:
@tabsi :@children[ ;io;;["border-top-left-radius;
o;	;"radius;"radius;@	;i ;;;@	;i ;[ ;i ;0;i;[[o;;"	side;"	side;@0[o;;"radius;"radius;@o;	;"global-radius;"global_radius;@;io;

;;;["E/* We can control whether or not we have inset shadows edges. */;@;	[ ;iBo;;"inset-shadow;T;@;	[u;¬[o:Sass::Script::Variable	:
@name"experimental:@underscored_name"experimental:@options{ :
@lineiD0[o:Sass::Tree::PropNode;["-webkit-box-shadow:@valueo:Sass::Script::List	:@separator:
space;[o; 	;"shiny-edge-size;"shiny_edge_size;@	;	iEo; 	;"shiny-edge-color;"shiny_edge_color;@	;	iEo:Sass::Script::String	:
@type:identifier;"
inset;@	;	iE;@	;	iE:@prop_syntax:new;@	:
@tabsi :@children[ ;	iEo:Sass::Tree::PropNode;["box-shadow;o:Sass::Script::List	:@separator:
space;[o;	;"shiny-edge-size;"shiny_edge_size;@;iGo;	;"shiny-edge-color;"shiny_edge_color;@;iGo:Sass::Script::String	;:identifier;"
inset;@;iG;@;iG:@prop_syntax:new;@:
@tabsi ;	[ ;iGu;ã[o:Sass::Script::Variable	:
@name"active:@underscored_name"active:@options{ :
@lineiI0[o:Sass::Tree::RuleNode:
@rule["&:active:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" ;	iI:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
:@sourceso:Set:
@hash{ :@subject0;@;	iI;[o:Sass::Selector::Parent;@;	iIo:Sass::Selector::Pseudo
;["active:
@type:
class;@:	@arg0;	iI:@has_childrenT;@	:
@tabsi :@children[u:Sass::Tree::IfNodeº[o:Sass::Script::Variable	:
@name"experimental:@underscored_name"experimental:@options{ :
@lineiJ0[o:Sass::Tree::PropNode;["-webkit-box-shadow:@valueo:Sass::Script::List	:@separator:
space;[o; 	;"shiny-edge-size;"shiny_edge_size;@	;	iKo; 	;"shiny-edge-active-color;"shiny_edge_active_color;@	;	iKo:Sass::Script::String	:
@type:identifier;"
inset;@	;	iK;@	;	iK:@prop_syntax:new;@	:
@tabsi :@children[ ;	iKo:Sass::Tree::PropNode;["box-shadow:@valueo:Sass::Script::List	:@separator:
space; [o; 	;"shiny-edge-size;"shiny_edge_size;@	;	iMo; 	;"shiny-edge-active-color;"shiny_edge_active_color;@	;	iMo:Sass::Script::String	;:identifier; "
inset;@	;	iM;@	;	iM:@prop_syntax:new;@	;i ;[ ;	iM;	iI;0;iC;[[o;;"active;"active;@o;;T;@;iCo;

;;;["5/* We use this to add transitions to elements */;@;	[ ;iPo;;"single-transition;T;@;	[u;	[o:Sass::Script::Variable	:
@name"experimental:@underscored_name"experimental:@options{ :
@lineiR0[o:Sass::Tree::PropNode;["-webkit-transition:@valueo:Sass::Script::List	:@separator:
space;[o; 	;"property;"property;@	;	iSo; 	;"
speed;"
speed;@	;	iSo; 	;"	ease;"	ease;@	;	iS;@	;	iS:@prop_syntax:new;@	:
@tabsi :@children[ ;	iSo;
;["-moz-transition;o;	;;;[o; 	;"property;"property;@	;	iTo; 	;"
speed;"
speed;@	;	iTo; 	;"	ease;"	ease;@	;	iT;@	;	iT;;;@	;i ;[ ;	iTo;;["transition;o;	;;;[o;	;"property;"property;@;iVo;	;"
speed;"
speed;@;iVo;	;"	ease;"	ease;@;iV;@;iV; ;!;@;"i ;	[ ;iV;0;iQ;[[o;;"property;"property;@o;	;;;"all;@;iQ[o;;"
speed;"
speed;@o:Sass::Script::Number:@numerator_units["ms:@original"
300ms;i,;@:@denominator_units[ ;iQ[o;;"	ease;"	ease;@o;	;;;"ease-out;@;iQo;

;;;["@/* We use this to add box-sizing across browser prefixes */;@;	[ ;iYo;;"box-sizing;T;@;	[u;<[o:Sass::Script::Variable	:
@name"experimental:@underscored_name"experimental:@options{ :
@linei[0[o:Sass::Tree::PropNode;["-moz-box-sizing:@valueo; 	;"	type;"	type;@	;	i\:@prop_syntax:new;@	:
@tabsi :@children[ ;	i\o;
;["-webkit-box-sizing;o; 	;"	type;"	type;@	;	i];;;@	;i ;[ ;	i]o;;["box-sizing;o;	;"	type;"	type;@;i_; ;!;@;"i ;	[ ;i_;0;iZ;[[o;;"	type;"	type;@o;	;;;"border-box;@;iZo;

;;;["6/* We use this to create equilateral triangles */;@;	[ ;ibo;;"css-triangle;T;@;	[o;;["content;o;;;;""";@; ;!;@;"i ;	[ ;ido;;["display;o;;;;"
block;@; ;!;@;"i ;	[ ;ieo;;["
width;o;;;;"0;@; ;!;@;"i ;	[ ;ifo;;["height;o;;;;"0;@; ;!;@;"i ;	[ ;igo;;["border;o;	;;;[o;	;;;"
inset;@;iho;	;"triangle-size;"triangle_size;@;ih;@;ih; ;!;@;"i ;	[ ;ihu;d[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"top:@options{ :
@lineii:@operand1o:Sass::Script::Variable	:
@name"triangle-direction:@underscored_name"triangle_direction;@	;ii;@	:@operator:eq;ii0[o:Sass::Tree::PropNode;["border-color;
o:Sass::Script::List	:@separator:
space;
[	o;	;"triangle-color;"triangle_color;@	;ijo;	;;	;
"transparent;@	;ijo;	;;	;
"transparent;@	;ijo;	;;	;
"transparent;@	;ij;@	;ij:@prop_syntax:new;@	:
@tabsi :@children[ ;ijo;;["border-top-style;
o;;;	;
"
solid;@	;;;@	;i ;[ ;iku;j[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"bottom:@options{ :
@lineim:@operand1o:Sass::Script::Variable	:
@name"triangle-direction:@underscored_name"triangle_direction;@	;im;@	:@operator:eq;im0[o:Sass::Tree::PropNode;["border-color;
o:Sass::Script::List	:@separator:
space;
[	o;	;;	;
"transparent;@	;ino;	;;	;
"transparent;@	;ino;	;"triangle-color;"triangle_color;@	;ino;	;;	;
"transparent;@	;in;@	;in:@prop_syntax:new;@	:
@tabsi :@children[ ;ino;;["border-bottom-style;
o;;;	;
"
solid;@	;;;@	;i ;[ ;iou;f[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"	left:@options{ :
@lineiq:@operand1o:Sass::Script::Variable	:
@name"triangle-direction:@underscored_name"triangle_direction;@	;iq;@	:@operator:eq;iq0[o:Sass::Tree::PropNode;["border-color;
o:Sass::Script::List	:@separator:
space;
[	o;	;;	;
"transparent;@	;iro;	;;	;
"transparent;@	;iro;	;;	;
"transparent;@	;iro;	;"triangle-color;"triangle_color;@	;ir;@	;ir:@prop_syntax:new;@	:
@tabsi :@children[ ;iro;;["border-left-style;
o;;;	;
"
solid;@	;;;@	;i ;[ ;isu;h[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"
right:@options{ :
@lineiu:@operand1o:Sass::Script::Variable	:
@name"triangle-direction:@underscored_name"triangle_direction;@	;iu;@	:@operator:eq;iu0[o:Sass::Tree::PropNode;["border-color;
o:Sass::Script::List	:@separator:
space;
[	o;	;;	;
"transparent;@	;ivo;	;"triangle-color;"triangle_color;@	;ivo;	;;	;
"transparent;@	;ivo;	;;	;
"transparent;@	;iv;@	;iv:@prop_syntax:new;@	:
@tabsi :@children[ ;ivo;;["border-right-style;
o;;;	;
"
solid;@	;;;@	;i ;[ ;iw;0;ic;[[o;;"triangle-size;"triangle_size;@0[o;;"triangle-color;"triangle_color;@0[o;;"triangle-direction;"triangle_direction;@0o;

;;;[")/* We use this to do clear floats */;@;	[ ;i{o;;"clearfix;T;@;	[o;;["
*zoom;o;;;;"1;@; ;!;@;"i ;	[ ;i}o:Sass::Tree::RuleNode:
@rule["&:before, &:after:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" ;i~:@members[o:Sass::Selector::Sequence;,[o:#Sass::Selector::SimpleSequence
:@sourceso:Set:
@hash{ :@subject0;+@Ý;i~;,[o:Sass::Selector::Parent;+@Ý;i~o:Sass::Selector::Pseudo
;["before;:
class;+@Ý:	@arg0;i~o;-;,[o;.
;/o;0;1{ ;20;+@Ý;i~;,[o;3;+@Ý;i~o;4
;["
after;;5;+@Ý;60;i~;T;@;"i ;	[o;;["content;o;;;;"" ";@; ;!;@;"i ;	[ ;i~o;;["display;o;;;;"
table;@; ;!;@;"i ;	[ ;i~;i~o;';(["&:after;)o;*;+" ;i;,[o;-;,[o;.
;/o;0;1{ ;20;+@;i;,[o;3;+@;io;4
;["
after;;5;+@;60;i;T;@;"i ;	[o;;["
clear;o;;;;"	both;@; ;!;@;"i ;	[ ;i;i;0;i|;[ o;

;;;["@/* We use this to add a glowing effect to block elements */;@;	[ ;i~o;;"block-glowing-effect;T;@;	[u;7[o:Sass::Script::Variable	:
@name"experimental:@underscored_name"experimental:@options{ :
@linei0[o:Sass::Tree::PropNode;["-webkit-transition:@valueo:Sass::Script::List	:@separator:
comma;[o;	;:
space;[o:Sass::Script::String	:
@type:identifier;"-webkit-box-shadow;@	;	io; 	;"fade-time;"fade_time;@	;	i;@	;	io;	;;;[o;	;;;"border-color;@	;	io; 	;"fade-time;"fade_time;@	;	io;	;;;"ease-in-out;@	;	i;@	;	i;@	;	i:@prop_syntax:new;@	:
@tabsi :@children[ ;	io;
;["-moz-transition;o;	;;;[o;	;;;[o;	;;;"-moz-box-shadow;@	;	io; 	;"fade-time;"fade_time;@	;	i;@	;	io;	;;;[o;	;;;"border-color;@	;	io; 	;"fade-time;"fade_time;@	;	io;	;;;"ease-in-out;@	;	i;@	;	i;@	;	i;;;@	;i ;[ ;	io;;["transition;o;	;:
comma;[o;	;;;[o;	;;;"box-shadow;@;io;	;"fade-time;"fade_time;@;i;@;io;	;;;[o;	;;;"border-color;@;io;	;"fade-time;"fade_time;@;io;	;;;"ease-in-out;@;i;@;i;@;i; ;!;@;"i ;	[ ;io;';(["&:o;	;"selector;"selector;@;i;T;@;"i ;	[u;Ë[o:Sass::Script::Variable	:
@name"experimental:@underscored_name"experimental:@options{ :
@linei0[o:Sass::Tree::PropNode;["-webkit-box-shadow:@valueo:Sass::Script::List	:@separator:
space;[	o:Sass::Script::Number:@numerator_units[ :@original"0;i ;@	:@denominator_units[ ;	io;;[ ;"0;i ;@	;@;	io;;["px;"5px;i
;@	;[ ;	io; 	;"glowing-effect-color;"glowing_effect_color;@	;	i;@	;	i:@prop_syntax:new;@	:
@tabsi :@children[ ;	io;
;["-moz-box-shadow;o;	;;;[	o;;[ ;"0;i ;@	;@;	io;;[ ;"0;i ;@	;@;	io;;["px;"5px;i
;@	;[ ;	io; 	;"glowing-effect-color;"glowing_effect_color;@	;	i;@	;	i;;;@	;i ;[ ;	io;;["box-shadow;o;	;;;[	o;#;$[ ;%"0;i ;@;&[ ;io;#;$[ ;%"0;i ;@;&@F;io;#;$["px;%"5px;i
;@;&[ ;io;	;"glowing-effect-color;"glowing_effect_color;@;i;@;i; ;!;@;"i ;	[ ;io;;["border-color;o;	;"glowing-effect-color;"glowing_effect_color;@;i; ;!;@;"i ;	[ ;i;i;0;i;[[o;;"selector;"selector;@o;	;;;"
focus;@;i[o;;"fade-time;"fade_time;@o;#;$["ms;%"
300ms;i,;@;&[ ;i[o;;"glowing-effect-color;"glowing_effect_color;@o:Sass::Script::Funcall;"fade-out:@keywords{ ;@;0;i;[o;	;"primary-color;"primary_color;@;io;#;$[ ;%"	0.25;f	0.25;@;&@F;io;

;;;["%/*
 * Foundation Variables
 * */;@;	[ ;io;

;;;["/* The default font-size is set to 100% of the browser style sheet (usually 16px)
 * for compatibility with brower-based text zoom or user-set defaults. */;@;	[ ;io;

;;;["/* Since the typical default browser font-size is 16px, that makes the calculation for grid size.
 * If you want your base font-size to be different and not have it effect the grid breakpoints,
 * set $em-base to $base-font-size and make sure $base-font-size is a px value. */;@;	[ ;io;;"!default;"base-font-size;o;#;$["%;%"	100%;ii;@;&[ ;i;@;	[ ;io;

;;;["B/* $base-line-height is 24px while $base-font-size is 16px */;@;	[ ;io;;"!default;"base-line-height;o;#;$["%;%"	150%;i;@;&[ ;i;@;	[ ;io;

;;;["M/* This is the default html and body font-size for the base em value. */;@;	[ ;io;;"!default;"em-base;o;#;$[ ;%"16;i;@;&@F;i ;@;	[ ;i o;

;;;["7/* It strips the unit of measure and returns it */;@;	[ ;i¢o:Sass::Tree::FunctionNode;"strip-unit;T;@;	[o:Sass::Tree::ReturnNode	;o:Sass::Script::Operation
:@operand2o;<
;=o;#;$[ ;%"1;i;@;&@F;i¤:@operand1o;<
;=o;#;$[ ;%"0;i ;@;&@F;i¤;>o;	;"num;"num;@;i¤;@:@operator:
times;i¤;@;?:	plus;i¤;>o;	;"num;"num;@;i¤;@;?:div;i¤;@;	[ ;i¤;0;i£;[[o;;"num;"num;@0o;

;;;["5/* Converts "px" to "em" using the ($)em-base */;@;	[ ;i§o;:;"convert-to-em;T;@;	[	o;;0;"
value;o;<
;=o;#;$["em;%"1em;i;@;&[ ;i©;>o;<
;=o;8;"strip-unit;9{ ;@;0;i©;[o;	;"em-base;"em_base;@;i©;>o;8;"strip-unit;9{ ;@;0;i©;[o;	;"
value;"
value;@;i©;@;?;B;i©;@;?;@;i©;@;	[ ;i©u;|[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@numerator_units["em:@original"0em:@valuei :@options{ :@denominator_units[ :
@lineiª:@operand1o:Sass::Script::Variable	:
@name"
value:@underscored_name"
value;@;iª;@:@operator:eq;iª0[o:Sass::Tree::VariableNode:@guarded0;"
value:
@expro;;[ ;	"0;
i ;@;[ ;iª;@:@children[ ;iªo;

;;;["/* Turn 0em into 0 */;@;	[ ;iªo;;	;o;	;"
value;"
value;@;i«;@;	[ ;i«;0;i¨;[[o;;"
value;"
value;@0o;

;;;["/* Working in ems is annoying. Think in pixels by using this handy function, emCalc(#)
 * Just enter the number, no need to mention "px" */;@;	[ ;i®o;:;"emCalc;T;@;	[o;;0;"max;o;8;"length;9{ ;@;0;i±;[o;	;"values;"values;@;i±;@;	[ ;i±o;

;;;["4/* Get the total number of parameters passed */;@;	[ ;i±o;

;;;["¢/* If there is only 1 parameter, then return it as an integer.
 * This is done because a list can't be multiplied or divided even if it contains a single value */;@;	[ ;i³u;î[o:Sass::Script::Operation
:@operand2o:Sass::Script::Number:@numerator_units[ :@original"1:@valuei:@options{ :@denominator_units[ :
@lineiµ:@operand1o:Sass::Script::Variable	:
@name"max:@underscored_name"max;@
;iµ;@
:@operator:eq;iµ0[o:Sass::Tree::ReturnNode	:
@expro:Sass::Script::Funcall;"convert-to-em:@keywords{ ;@
:@splat0;iµ:
@args[o;;"nth;{ ;@
;0;iµ;[o;	;"values;"values;@
;iµo;;[ ;	"1;
i;@
;@;iµ;@
:@children[ ;iµo;;0;"emValues;o;	;;;[ ;@;i·;@;	[ ;i·o;

;;;["E/* This will eventually store the converted $values in a list */;@;	[ ;i·o:Sass::Tree::ForNode:@exclusiveF:
@fromo;#;$[ ;%"1;i;@;&@F;i¸;T;@:	@var"i;	[o;;0;"emValues;o;8;"append;9{ ;@;0;i¹;[o;	;"emValues;"emValues;@;i¹o;8;"convert-to-em;9{ ;@;0;i¹;[o;8;"nth;9{ ;@;0;i¹;[o;	;"values;"values;@;i¹o;	;"i;"i;@;i¹;@;	[ ;i¹:@too;	;"max;"max;@;i¸;i¸o;;	;o;	;"emValues;"emValues;@;i»;@;	[ ;i»;o;;"values;"values;{ ;i°;[ o;

;;;["}/* Maybe you want to create rems and pixels
 * @function remCalc($pxWidth) {
 *   @return $pxWidth / $em-base * 1rem;
 * } */;@;	[ ;i¾o;

;;;["8/* We use these to control various global styles */;@;	[ ;iÃo;;"!default;"body-bg;o:Sass::Script::Color	:@attrs{	:rediÿ:
alphai:
greeniÿ:	blueiÿ;0;@;iÄ;@;	[ ;iÄo;;"!default;"body-font-color;o;H	;I{	;Ji';Ki;Li';Mi';0;@;iÅ;@;	[ ;iÅo;;"!default;"body-font-family;o;	;;7;[
o;	;:string;"Helvetica Neue;@;iÆo;	;;N;"Helvetica;@;iÆo;	;;;"Helvetica;@;iÆo;	;;;"
Arial;@;iÆo;	;;;"sans-serif;@;iÆ;@;iÆ;@;	[ ;iÆo;;"!default;"body-font-weight;o;	;;;"normal;@;iÇ;@;	[ ;iÇo;;"!default;"body-font-style;o;	;;;"normal;@;iÈ;@;	[ ;iÈo;

;;;["0/* We use this to control font-smoothing */;@;	[ ;iÊo;;"!default;"font-smoothing;o;	;;;"subpixel-antialiased;@;iË;@;	[ ;iËo;

;;;[":/* We use these to control text direction settings */;@;	[ ;iÍo;;"!default;"text-direction;o;	;;;"ltr;@;iÎ;@;	[ ;iÎo;

;;;["h/* NOTE: No need to change this conditional statement, $text-direction variable controls it all. */;@;	[ ;iÐo;;"!default;"default-float;o;	;;;"	left;@;iÑ;@;	[ ;iÑo;;"!default;"opposite-direction;o;	;;;"
right;@;iÒ;@;	[ ;iÒu;¼[o:Sass::Script::Operation
:@operand2o:Sass::Script::String	:
@type:identifier:@value"ltr:@options{ :
@lineiÓ:@operand1o:Sass::Script::Variable	:
@name"text-direction:@underscored_name"text_direction;@	;iÓ;@	:@operator:eq;iÓu:Sass::Tree::IfNode÷[00[o:Sass::Tree::VariableNode:@guarded0:
@name"default-float:
@expro:Sass::Script::String	:
@type:identifier:@value"
right:@options{ :
@linei×;@:@children[ ;i×o; ;0;"opposite-direction;o;		;
;;"	left;@;iØ;@;[ ;iØ[o:Sass::Tree::VariableNode:@guarded0;"default-float:
@expro;	;;	;
"	left;@	;iÔ;@	:@children[ ;iÔo;;0;"opposite-direction;o;	;;	;
"
right;@	;iÕ;@	;[ ;iÕo;

;;;["4/* We use these as default colors throughout */;@;	[ ;iÛo;;"!default;"primary-color;o;H	;I{	;Ji0;Ki;Li¦;MiË;0;@;iÜ;@;	[ ;iÜo;;"!default;"secondary-color;o;H	;I{	;Jié;Ki;Lié;Mié;0;@;iÝ;@;	[ ;iÝo;;"!default;"alert-color;o;H	;I{	;JiÆ;Ki;Li;Mi;0;@;iÞ;@;	[ ;iÞo;;"!default;"success-color;o;H	;I{	;Jib;Ki;Li¤;Mi(;0;@;iß;@;	[ ;ißo;

;;;["W/* We use these to make sure border radius matches unless we want it different. */;@;	[ ;iáo;;"!default;"global-radius;o;#;$["px;%"3px;i;@;&[ ;iâ;@;	[ ;iâo;;"!default;"global-rounded;o;#;$["px;%"1000px;iè;@;&[ ;iã;@;	[ ;ião;

;;;["L/* We use these to control inset shadow shiny edges and depressions. */;@;	[ ;iåo;;"!default;"shiny-edge-size;o;	;;;[o;#;$[ ;%"0;i ;@;&@F;iæo;#;$["px;%"1px;i;@;&[ ;iæo;#;$[ ;%"0;i ;@;&@F;iæ;@;iæ;@;	[ ;iæo;;"!default;"shiny-edge-color;o;8;"	rgba;9{ ;@;0;iç;[o;H	;I{	;Jiÿ;Ki;Liÿ;Miÿ;0;@;iço;#;$[ ;%"0.5;f0.5;@;&@F;iç;@;	[ ;iço;;"!default;"shiny-edge-active-color;o;8;"	rgba;9{ ;@;0;iè;[o;H	;I{	;Ji ;Ki;Li ;Mi ;0;@;ièo;#;$[ ;%"0.2;f0.20000000000000001 ;@;&@F;iè;@;	[ ;ièo;

;;;["[/* We use this to control whether or not CSS classes come through in the gem files. */;@;	[ ;iêo;;"!default;"include-html-classes;o;;T;@;ië;@;	[ ;iëo;;"!default;"include-print-styles;o;;T;@;iì;@;	[ ;iìo;;"!default;" include-html-global-classes;o;	;"include-html-classes;"include_html_classes;@;ií;@;	[ ;iío;

;;;["/* Media Queries */;@;	[ ;iïo;;"!default;"small-screen;o;#;$["px;%"
768px;i ;@;&[ ;ið;@;	[ ;iðo;;"!default;"medium-screen;o;#;$["px;%"1280px;i ;@;&[ ;iñ;@;	[ ;iño;;"!default;"large-screen;o;#;$["px;%"1440px;i ;@;&[ ;iò;@;	[ ;iòo;;"!default;"screen;o;	;;N;"only screen;@;iô;@;	[ ;iôo;;"!default;"
small;o:&Sass::Script::StringInterpolation
:@aftero;	;;N;");@;iõ:	@mido;	;"small-screen;"small_screen;@;iõ;@:@beforeo;	;;N;"!only screen and (min-width: ;@;iõ;iõ;@;	[ ;iõo;;"!default;"medium;o;O
;Po;	;;N;");@;iö;Qo;	;"medium-screen;"medium_screen;@;iö;@;Ro;	;;N;" only screen and (min-width:;@;iö;iö;@;	[ ;iöo;;"!default;"
large;o;O
;Po;	;;N;");@;i÷;Qo;	;"large-screen;"large_screen;@;i÷;@;Ro;	;;N;" only screen and (min-width:;@;i÷;i÷;@;	[ ;i÷o;;"!default;"landscape;o;	;;N;"-only screen and (orientation: landscape);@;iø;@;	[ ;iøo;;"!default;"portrait;o;	;;N;",only screen and (orientation: portrait);@;iù;@;	[ ;iùo;

;;;["w/*We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet */;@;	[ ;iûo;;"!default;"cursor-crosshair-value;o;	;;;"crosshair;@;iü;@;	[ ;iüo;;"!default;"cursor-default-value;o;	;;;"default;@;iý;@;	[ ;iýo;;"!default;"cursor-pointer-value;o;	;;;"pointer;@;iþ;@;	[ ;iþo;;"!default;"cursor-help-value;o;	;;;"	help;@;iÿ;@;	[ ;iÿo;;"!default;"cursor-text-value;o;	;;;"	text;@;i ;@;	[ ;i u;[o:Sass::Script::Variable	:
@name" include-html-global-classes:@underscored_name" include_html_global_classes:@options{ :
@linei0[#o:Sass::Tree::CommentNode
:
@type:silent:@value["F/* Set box-sizing globally to handle padding and border widths */;@	:@children[ ;	io:Sass::Tree::RuleNode:
@rule["*,
  *:before,
  *:after:@parsed_ruleso:"Sass::Selector::CommaSequence:@filename" ;	i:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
:@sourceso:Set:
@hash{ :@subject0;@;	i;[o:Sass::Selector::Universal;@:@namespace0;	io;;["
o;
;o;;{ ;0;@;	i;[o;;@;0;	io:Sass::Selector::Pseudo
;["before;:
class;@:	@arg0;	io;;["
o;
;o;;{ ;0;@;	i;[o;;@;0;	io;
;["
after;;;@;0;	i:@has_childrenT;@	:
@tabsi ;[o:Sass::Tree::MixinNode;"box-sizing:@keywords{ ;@	;[ :@splat0;	i	:
@args[o:Sass::Script::String	;:identifier;"border-box;@	;	i	;	io;;["html,
  body;o;;" ;	i;[o;;[o;
;o;;{ ;0;@>;	i;[o:Sass::Selector::Element	;["	html;@>;0;	io;;["
o;
;o;;{ ;0;@>;	i;[o;(	;["	body;@>;0;	i; T;@	;!i ;[o:Sass::Tree::PropNode;["font-size;o; 	;"base-font-size;"base_font_size;@	;	i:@prop_syntax:new;@	;!i ;[ ;	i;	io;

;;;["/* Default body styles */;@	;[ ;	io;;["	body;o;;" ;	i;[o;;[o;
;o;;{ ;0;@c;	i;[o;(	;["	body;@c;0;	i; T;@	;!i ;[o;);["background;o; 	;"body-bg;"body_bg;@	;	i;*;+;@	;!i ;[ ;	io;);["
color;o; 	;"body-font-color;"body_font_color;@	;	i;*;+;@	;!i ;[ ;	io;);["padding;o;&;;';"0;@	;*;+;@	;!i ;[ ;	io;);["margin;o;&;;';"0;@	;*;+;@	;!i ;[ ;	io;);["font-family;o; 	;"body-font-family;"body_font_family;@	;	i;*;+;@	;!i ;[ ;	io;);["font-weight;o; 	;"body-font-weight;"body_font_weight;@	;	i;*;+;@	;!i ;[ ;	io;);["font-style;o; 	;"body-font-style;"body_font_style;@	;	i;*;+;@	;!i ;[ ;	io;);["line-height;o;&;;';"1;@	;*;+;@	;!i ;[ ;	io;

;;;["F/* Set to $base-line-height to take on browser default of 150% */;@	;[ ;	io;);["position;o;&;;';"relative;@	;*;+;@	;!i ;[ ;	io;);["cursor;o; 	;"cursor-default-value;"cursor_default_value;@	;	i;*;+;@	;!i ;[ ;	i;	io;;["a:hover;o;;" ;	i;[o;;[o;
;o;;{ ;0;@´;	i;[o;(	;["a;@´;0;	io;
;["
hover;;;@´;0;	i; T;@	;!i ;[o;);["cursor;o; 	;"cursor-pointer-value;"cursor_pointer_value;@	;	i;*;+;@	;!i ;[ ;	i;	io;

;;;["</* Override outline from normalize, we don't like it */;@	;[ ;	io;;["a:focus;o;;" ;	i ;[o;;[o;
;o;;{ ;0;@Ò;	i ;[o;(	;["a;@Ò;0;	i o;
;["
focus;;;@Ò;0;	i ; T;@	;!i ;[o;);["outline;o;&;;';"	none;@	;*;+;@	;!i ;[ ;	i ;	i o;

;;;["B/* Grid Defaults to get images and embeds to work properly */;@	;[ ;	i"o;;["img,
  object,
  embed;o;;" ;	i%;[o;;[o;
;o;;{ ;0;@ï;	i%;[o;(	;["img;@ï;0;	i%o;;["
o;
;o;;{ ;0;@ï;	i%;[o;(	;["object;@ï;0;	i%o;;["
o;
;o;;{ ;0;@ï;	i%;[o;(	;["
embed;@ï;0;	i%; T;@	;!i ;[o;);["max-width;o;&;;';"	100%;@	;*;+;@	;!i ;[ ;	i%o;);["height;o;&;;';"	auto;@	;*;+;@	;!i ;[ ;	i%;	i%o;;["object,
  embed;o;;" ;	i(;[o;;[o;
;o;;{ ;0;@;	i(;[o;(	;["object;@;0;	i(o;;["
o;
;o;;{ ;0;@;	i(;[o;(	;["
embed;@;0;	i(; T;@	;!i ;[o;);["height;o;&;;';"	100%;@	;*;+;@	;!i ;[ ;	i(;	i(o;;["img;o;;" ;	i);[o;;[o;
;o;;{ ;0;@?;	i);[o;(	;["img;@?;0;	i); T;@	;!i ;[o;);["-ms-interpolation-mode;o;&;;';"bicubic;@	;*;+;@	;!i ;[ ;	i);	i)o;;["#map_canvas,
  .map_canvas;o;;" ;	i,;[o;;[o;
;o;;{ ;0;@U;	i,;[o:Sass::Selector::Id;["map_canvas;@U;	i,o;;["
o;
;o;;{ ;0;@U;	i,;[o:Sass::Selector::Class;["map_canvas;@U;	i,; T;@	;!i ;[o;;["img,
    embed,
    object;o;;" ;	i/;[o;;[o;
;o;;{ ;0;@o;	i/;[o;(	;["img;@o;0;	i/o;;["
o;
;o;;{ ;0;@o;	i/;[o;(	;["
embed;@o;0;	i/o;;["
o;
;o;;{ ;0;@o;	i/;[o;(	;["object;@o;0;	i/; T;@	;!i ;[o;);["max-width;o:Sass::Script::List	:@separator:
space;[o;&	;;';"	none;@	;	i/o;&	;;';"!important;@	;	i/;@	;	i/;*;+;@	;!i ;[ ;	i/;	i/;	i,o;

;;;[",/* Miscellaneous useful HTML classes */;@	;[ ;	i3o;;["
.left;o;;" ;	i4;[o;;[o;
;o;;{ ;0;@¡;	i4;[o;-;["	left;@¡;	i4; T;@	;!i ;[o;);["
float;o;.	;/;0;[o;&	;;';"	left;@	;	i4o;&	;;';"!important;@	;	i4;@	;	i4;*;+;@	;!i ;[ ;	i4;	i4o;;[".right;o;;" ;	i5;[o;;[o;
;o;;{ ;0;@»;	i5;[o;-;["
right;@»;	i5; T;@	;!i ;[o;);["
float;o;.	;/;0;[o;&	;;';"
right;@	;	i5o;&	;;';"!important;@	;	i5;@	;	i5;*;+;@	;!i ;[ ;	i5;	i5o;;[".text-left;o;;" ;	i6;[o;;[o;
;o;;{ ;0;@Õ;	i6;[o;-;["text-left;@Õ;	i6; T;@	;!i ;[o;);["text-align;o;.	;/;0;[o;&	;;';"	left;@	;	i6o;&	;;';"!important;@	;	i6;@	;	i6;*;+;@	;!i ;[ ;	i6;	i6o;;[".text-right;o;;" ;	i7;[o;;[o;
;o;;{ ;0;@ï;	i7;[o;-;["text-right;@ï;	i7; T;@	;!i ;[o;);["text-align;o;.	;/;0;[o;&	;;';"
right;@	;	i7o;&	;;';"!important;@	;	i7;@	;	i7;*;+;@	;!i ;[ ;	i7;	i7o;;[".text-center;o;;" ;	i8;[o;;[o;
;o;;{ ;0;@	;	i8;[o;-;["text-center;@	;	i8; T;@	;!i ;[o;);["text-align;o;.	;/;0;[o;&	;;';"center;@	;	i8o;&	;;';"!important;@	;	i8;@	;	i8;*;+;@	;!i ;[ ;	i8;	i8o;;[".text-justify;o;;" ;	i9;[o;;[o;
;o;;{ ;0;@#;	i9;[o;-;["text-justify;@#;	i9; T;@	;!i ;[o;);["text-align;o;.	;/;0;[o;&	;;';"justify;@	;	i9o;&	;;';"!important;@	;	i9;@	;	i9;*;+;@	;!i ;[ ;	i9;	i9o;;["
.hide;o;;" ;	i:;[o;;[o;
;o;;{ ;0;@=;	i:;[o;-;["	hide;@=;	i:; T;@	;!i ;[o;);["display;o;&;;';"	none;@	;*;+;@	;!i ;[ ;	i:;	i:o;

;;;["â/* Font smoothing
 * Antialiased font smoothing works best for light text on a dark background.
 * Apply to single elements instead of globally to body.
 * Note this only applies to webkit-based desktop browsers on the Mac. */;@	;[ ;	i<o;;[".antialiased;o;;" ;	i@;[o;;[o;
;o;;{ ;0;@W;	i@;[o;-;["antialiased;@W;	i@; T;@	;!i ;[o;);["-webkit-font-smoothing;o;&;;';"antialiased;@	;*;+;@	;!i ;[ ;	i@;	i@o;

;;;["W/* Get rid of gap under images by making them display: inline-block; by default */;@	;[ ;	iBo;;["img;o;;" ;	iC;[o;;[o;
;o;;{ ;0;@q;	iC;[o;(	;["img;@q;0;	iC; T;@	;!i ;[o;);["display;o;&;;';"inline-block;@	;*;+;@	;!i ;[ ;	iDo;);["vertical-align;o;&;;';"middle;@	;*;+;@	;!i ;[ ;	iE;	iCo;

;;;["(/*
 * Global resets for forms
 * */;@	;[ ;	iHo;

;;;[";/* Make sure textarea takes on height automatically */;@	;[ ;	iLo;;["textarea;o;;" ;	iM;[o;;[o;
;o;;{ ;0;@;	iM;[o;(	;["textarea;@;0;	iM; T;@	;!i ;[o;);["height;o;&;;';"	auto;@	;*;+;@	;!i ;[ ;	iMo;);["min-height;o;&;;';"	50px;@	;*;+;@	;!i ;[ ;	iM;	iMo;

;;;["5/* Make select elements 100% width by default */;@	;[ ;	iOo;;["select;o;;" ;	iP;[o;;[o;
;o;;{ ;0;@µ;	iP;[o;(	;["select;@µ;0;	iP; T;@	;!i ;[o;);["
width;o;&;;';"	100%;@	;*;+;@	;!i ;[ ;	iP;	iP;i