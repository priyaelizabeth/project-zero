3.2.6 (Media Mark)
3a0b05c8d48c07eae82eceb6571578ab9de3cd5e
o:Sass::Tree::RootNode
:@template"´(//
// Global Foundation Mixins
//

$experimental: true !default;

// We use this to control border radius.
@mixin radius($radius:$global-radius) {
  @if $radius {
    @if $experimental {
      -webkit-border-radius: $radius;
    }
    border-radius: $radius;
  }
}

// We use this to create equal side border radius on elements.
@mixin side-radius($side, $radius:$global-radius) {
  @if $side == left {
    @if $experimental {
      -moz-border-radius-bottomleft: $radius;
      -moz-border-radius-topleft: $radius;
      -webkit-border-bottom-left-radius: $radius;
      -webkit-border-top-left-radius: $radius;
    }
    border-bottom-left-radius: $radius;
    border-top-left-radius: $radius;
  }
  @else if $side == right {
    @if $experimental {
      -moz-border-radius-topright: $radius;
      -moz-border-radius-bottomright: $radius;
      -webkit-border-top-right-radius: $radius;
      -webkit-border-bottom-right-radius: $radius;
    }
    border-top-right-radius: $radius;
    border-bottom-right-radius: $radius;
  }
  @else if $side == top {
    @if $experimental {
      -moz-border-radius-topright: $radius;
      -moz-border-radius-topleft: $radius;
      -webkit-border-top-right-radius: $radius;
      -webkit-border-top-left-radius: $radius;
    }
    border-top-right-radius: $radius;
    border-top-left-radius: $radius;
  }
  @else if $side == bottom {
    @if $experimental {
      -moz-border-radius-bottomright: $radius;
      -moz-border-radius-bottomleft: $radius;
      -webkit-border-bottom-right-radius: $radius;
      -webkit-border-bottom-left-radius: $radius;
    }
    border-bottom-right-radius: $radius;
    border-bottom-left-radius: $radius;
  }
}

// We can control whether or not we have inset shadows edges.
@mixin inset-shadow($active:true) {
  @if $experimental {
    -webkit-box-shadow: $shiny-edge-size $shiny-edge-color inset;
  }
  box-shadow: $shiny-edge-size $shiny-edge-color inset;

  @if $active { &:active {
    @if $experimental {
      -webkit-box-shadow: $shiny-edge-size $shiny-edge-active-color inset;
    }
    box-shadow: $shiny-edge-size $shiny-edge-active-color inset; } }
}

// We use this to add transitions to elements
@mixin single-transition($property:all, $speed:300ms, $ease:ease-out) {
  @if $experimental {
    -webkit-transition: $property $speed $ease;
    -moz-transition: $property $speed $ease;
  }
  transition: $property $speed $ease;
}

// We use this to add box-sizing across browser prefixes
@mixin box-sizing($type:border-box) {
  @if $experimental {
    -moz-box-sizing: $type;
    -webkit-box-sizing: $type;
  }
  box-sizing: $type;
}

// We use this to create equilateral triangles
@mixin css-triangle($triangle-size, $triangle-color, $triangle-direction) {
  content: "";
  display: block;
  width: 0;
  height: 0;
  border: inset $triangle-size;
  @if ($triangle-direction == top) {
    border-color: $triangle-color transparent transparent transparent;
    border-top-style: solid;
  }
  @if ($triangle-direction == bottom) {
    border-color: transparent transparent $triangle-color transparent;
    border-bottom-style: solid;
  }
  @if ($triangle-direction == left) {
    border-color: transparent transparent transparent $triangle-color;
    border-left-style: solid;
  }
  @if ($triangle-direction == right) {
    border-color: transparent $triangle-color transparent transparent;
    border-right-style: solid;
  }
}

// We use this to do clear floats
@mixin clearfix() {
  *zoom:1;
  &:before, &:after { content: " "; display: table; }
  &:after { clear: both; }
}


// We use this to add a glowing effect to block elements
@mixin block-glowing-effect($selector:focus, $fade-time:300ms, $glowing-effect-color:fade-out($primary-color, .25)) {
  @if $experimental {
    -webkit-transition: -webkit-box-shadow $fade-time, border-color $fade-time ease-in-out;
    -moz-transition: -moz-box-shadow $fade-time, border-color $fade-time ease-in-out;
  }
  transition: box-shadow $fade-time, border-color $fade-time ease-in-out;

  &:#{$selector} {
    @if $experimental {
      -webkit-box-shadow: 0 0 5px $glowing-effect-color;
      -moz-box-shadow: 0 0 5px $glowing-effect-color;
    }
    box-shadow: 0 0 5px $glowing-effect-color;
    border-color: $glowing-effect-color;
  }
}

//
// Foundation Variables
//

// The default font-size is set to 100% of the browser style sheet (usually 16px)
// for compatibility with brower-based text zoom or user-set defaults.

// Since the typical default browser font-size is 16px, that makes the calculation for grid size.
// If you want your base font-size to be different and not have it effect the grid breakpoints,
// set $em-base to $base-font-size and make sure $base-font-size is a px value.
$base-font-size: 100% !default;

// $base-line-height is 24px while $base-font-size is 16px
$base-line-height: 150% !default;

// This is the default html and body font-size for the base em value.
$em-base: 16 !default;

// It strips the unit of measure and returns it
@function strip-unit($num) {
  @return $num / ($num * 0 + 1);
}

// Converts "px" to "em" using the ($)em-base
@function convert-to-em($value)  {
  $value: strip-unit($value) / strip-unit($em-base) * 1em;
  @if ($value == 0em) { $value: 0; } // Turn 0em into 0
  @return $value;
}

// Working in ems is annoying. Think in pixels by using this handy function, emCalc(#)
// Just enter the number, no need to mention "px"
@function emCalc($values...) {
  $max: length($values); // Get the total number of parameters passed

  // If there is only 1 parameter, then return it as an integer.
  // This is done because a list can't be multiplied or divided even if it contains a single value
  @if $max == 1 { @return convert-to-em(nth($values, 1)); }

  $emValues: (); // This will eventually store the converted $values in a list
  @for $i from 1 through $max {
    $emValues: append($emValues, convert-to-em(nth($values, $i)));
  }
  @return $emValues;
}

// Maybe you want to create rems and pixels
// @function remCalc($pxWidth) {
//   @return $pxWidth / $em-base * 1rem;
// }

// We use these to control various global styles
$body-bg: #fff !default;
$body-font-color: #222 !default;
$body-font-family: "Helvetica Neue", "Helvetica", Helvetica, Arial, sans-serif !default;
$body-font-weight: normal !default;
$body-font-style: normal !default;

// We use this to control font-smoothing
$font-smoothing: subpixel-antialiased !default;

// We use these to control text direction settings
$text-direction: ltr !default;

// NOTE: No need to change this conditional statement, $text-direction variable controls it all.
$default-float: left !default;
$opposite-direction: right !default;
@if $text-direction == ltr {
  $default-float: left;
  $opposite-direction: right;
} @else {
  $default-float: right;
  $opposite-direction: left;
}

// We use these as default colors throughout
$primary-color: #2ba6cb !default;
$secondary-color: #e9e9e9 !default;
$alert-color: #c60f13 !default;
$success-color: #5da423 !default;

// We use these to make sure border radius matches unless we want it different.
$global-radius: 3px !default;
$global-rounded: 1000px !default;

// We use these to control inset shadow shiny edges and depressions.
$shiny-edge-size: 0 1px 0 !default;
$shiny-edge-color: rgba(#fff, .5) !default;
$shiny-edge-active-color: rgba(#000, .2) !default;

// We use this to control whether or not CSS classes come through in the gem files.
$include-html-classes: true !default;
$include-print-styles: true !default;
$include-html-global-classes: $include-html-classes !default;

// Media Queries
$small-screen: 768px !default;
$medium-screen: 1280px !default;
$large-screen: 1440px !default;

$screen: "only screen" !default;
$small: "only screen and (min-width: #{$small-screen})" !default;
$medium: "only screen and (min-width:#{$medium-screen})" !default;
$large: "only screen and (min-width:#{$large-screen})" !default;
$landscape: "only screen and (orientation: landscape)" !default;
$portrait: "only screen and (orientation: portrait)" !default;

//We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet
$cursor-crosshair-value: crosshair !default;
$cursor-default-value: default !default;
$cursor-pointer-value: pointer !default;
$cursor-help-value: help !default;
$cursor-text-value: text !default;


@if $include-html-global-classes {

  // Set box-sizing globally to handle padding and border widths
  *,
  *:before,
  *:after {
    @include box-sizing(border-box);
  }

  html,
  body { font-size: $base-font-size; }

  // Default body styles
  body {
    background: $body-bg;
    color: $body-font-color;
    padding: 0;
    margin: 0;
    font-family: $body-font-family;
    font-weight: $body-font-weight;
    font-style: $body-font-style;
    line-height: 1; // Set to $base-line-height to take on browser default of 150%
    position: relative;
    cursor: $cursor-default-value;
  }

a:hover { cursor: $cursor-pointer-value; }

  // Override outline from normalize, we don't like it
  a:focus { outline: none; }

  // Grid Defaults to get images and embeds to work properly
  img,
  object,
  embed { max-width: 100%; height: auto; }

  object,
  embed { height: 100%; }
  img { -ms-interpolation-mode: bicubic; }

  #map_canvas,
  .map_canvas {
    img,
    embed,
    object { max-width: none !important;
    }
  }

  // Miscellaneous useful HTML classes
  .left         { float: left !important; }
  .right        { float: right !important; }
  .text-left    { text-align: left !important; }
  .text-right   { text-align: right !important; }
  .text-center  { text-align: center !important; }
  .text-justify { text-align: justify !important; }
  .hide         { display: none; }

  // Font smoothing
  // Antialiased font smoothing works best for light text on a dark background.
  // Apply to single elements instead of globally to body.
  // Note this only applies to webkit-based desktop browsers on the Mac.
  .antialiased { -webkit-font-smoothing: antialiased; }

  // Get rid of gap under images by making them display: inline-block; by default
  img {
    display: inline-block;
    vertical-align: middle;
  }

  //
  // Global resets for forms
  //

  // Make sure textarea takes on height automatically
  textarea { height: auto; min-height: 50px; }

  // Make select elements 100% width by default
  select { width: 100%; }

}
:@children[Uo:Sass::Tree::CommentNode
:
@type:silent;[ :@value[")/*
 * Global Foundation Mixins
 * */:@options{ :
@lineio:Sass::Tree::VariableNode:
@name"experimental;[ :@guarded"!default;@:
@expro:Sass::Script::Bool;T;@;i
;i
o;
;	;
;[ ;["0/* We use this to control border radius. */;@;io:Sass::Tree::MixinDefNode;"radius;[u:Sass::Tree::IfNodeó[o:Sass::Script::Variable	:
@name"radius:@underscored_name"radius:@options{ :
@linei0[u:Sass::Tree::IfNodeø[o:Sass::Script::Variable	:
@name"experimental:@underscored_name"experimental:@options{ :
@linei0[o:Sass::Tree::PropNode:
@tabsi ;["-webkit-border-radius:@children[ :@valueo; 	;"radius;"radius;@	;	i;@	;	i:@prop_syntax:newo:Sass::Tree::PropNode:
@tabsi ;["border-radius:@children[ :@valueo; 	;"radius;"radius;@	;	i;@	;	i:@prop_syntax:new;@;i:@has_childrenT:@splat0:
@args[[o:Sass::Script::Variable;"radius:@underscored_name"radius;@o;	;"global-radius;"global_radius;@;io;
;	;
;[ ;["F/* We use this to create equal side border radius on elements. */;@;io;;"side-radius;[u;õ[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"	left;@:
@linei;i:@operand1o:Sass::Script::Variable	:
@name"	side:@underscored_name"	side;@;i:@operator:equ:Sass::Tree::IfNodeú[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"
right;@:
@linei";i":@operand1o:Sass::Script::Variable	:
@name"	side:@underscored_name"	side;@;i":@operator:equ:Sass::Tree::IfNodeø[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"top;@:
@linei,;i,:@operand1o:Sass::Script::Variable	:
@name"	side:@underscored_name"	side;@;i,:@operator:equ:Sass::Tree::IfNode[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"bottom;@:
@linei6;i6:@operand1o:Sass::Script::Variable	:
@name"	side:@underscored_name"	side;@;i6:@operator:eq0[u:Sass::Tree::IfNode![o:Sass::Script::Variable	:
@name"experimental:@underscored_name"experimental:@options{ :
@linei70[	o:Sass::Tree::PropNode:
@tabsi ;["#-moz-border-radius-bottomright:@children[ :@valueo; 	;"radius;"radius;@	;	i8;@	;	i8:@prop_syntax:newo;
;i ;[""-moz-border-radius-bottomleft;[ ;o; 	;"radius;"radius;@	;	i9;@	;	i9;;o;
;i ;["'-webkit-border-bottom-right-radius;[ ;o; 	;"radius;"radius;@	;	i:;@	;	i:;;o;
;i ;["&-webkit-border-bottom-left-radius;[ ;o; 	;"radius;"radius;@	;	i;;@	;	i;;;o:Sass::Tree::PropNode:
@tabsi ;["border-bottom-right-radius:@children[ ;o;	;"radius;"radius;@;i=;@;i=:@prop_syntax:newo;;i ;["border-bottom-left-radius;[ ;o;	;"radius;"radius;@;i>;@;i>;;[u;[o:Sass::Script::Variable	:
@name"experimental:@underscored_name"experimental:@options{ :
@linei-0[	o:Sass::Tree::PropNode:
@tabsi ;[" -moz-border-radius-topright:@children[ :@valueo; 	;"radius;"radius;@	;	i.;@	;	i.:@prop_syntax:newo;
;i ;["-moz-border-radius-topleft;[ ;o; 	;"radius;"radius;@	;	i/;@	;	i/;;o;
;i ;["$-webkit-border-top-right-radius;[ ;o; 	;"radius;"radius;@	;	i0;@	;	i0;;o;
;i ;["#-webkit-border-top-left-radius;[ ;o; 	;"radius;"radius;@	;	i1;@	;	i1;;o:Sass::Tree::PropNode:
@tabsi ;["border-top-right-radius:@children[ ;o;	;"radius;"radius;@;i3;@;i3:@prop_syntax:newo;;i ;["border-top-left-radius;[ ;o;	;"radius;"radius;@;i4;@;i4;;[u;[o:Sass::Script::Variable	:
@name"experimental:@underscored_name"experimental:@options{ :
@linei#0[	o:Sass::Tree::PropNode:
@tabsi ;[" -moz-border-radius-topright:@children[ :@valueo; 	;"radius;"radius;@	;	i$;@	;	i$:@prop_syntax:newo;
;i ;["#-moz-border-radius-bottomright;[ ;o; 	;"radius;"radius;@	;	i%;@	;	i%;;o;
;i ;["$-webkit-border-top-right-radius;[ ;o; 	;"radius;"radius;@	;	i&;@	;	i&;;o;
;i ;["'-webkit-border-bottom-right-radius;[ ;o; 	;"radius;"radius;@	;	i';@	;	i';;o:Sass::Tree::PropNode:
@tabsi ;["border-top-right-radius:@children[ ;o;	;"radius;"radius;@;i);@;i):@prop_syntax:newo;;i ;["border-bottom-right-radius;[ ;o;	;"radius;"radius;@;i*;@;i*;;[u;[o:Sass::Script::Variable	:
@name"experimental:@underscored_name"experimental:@options{ :
@linei0[	o:Sass::Tree::PropNode:
@tabsi ;[""-moz-border-radius-bottomleft:@children[ :@valueo; 	;"radius;"radius;@	;	i;@	;	i:@prop_syntax:newo;
;i ;["-moz-border-radius-topleft;[ ;o; 	;"radius;"radius;@	;	i;@	;	i;;o;
;i ;["&-webkit-border-bottom-left-radius;[ ;o; 	;"radius;"radius;@	;	i;@	;	i;;o;
;i ;["#-webkit-border-top-left-radius;[ ;o; 	;"radius;"radius;@	;	i;@	;	i;;o:Sass::Tree::PropNode:
@tabsi ;["border-bottom-left-radius:@children[ ;o;	;"radius;"radius;@;i;@;i:@prop_syntax:newo;;i ;["border-top-left-radius;[ ;o;	;"radius;"radius;@;i ;@;i ;;;@;i;T;0;[[o;;"	side;"	side;@0[o;;"radius;"radius;@o;	;"global-radius;"global_radius;@;io;
;	;
;[ ;["E/* We can control whether or not we have inset shadows edges. */;@;iBo;;"inset-shadow;[u;¬[o:Sass::Script::Variable	:
@name"experimental:@underscored_name"experimental:@options{ :
@lineiD0[o:Sass::Tree::PropNode:
@tabsi ;["-webkit-box-shadow:@children[ :@valueo:Sass::Script::List	;[o; 	;"shiny-edge-size;"shiny_edge_size;@	;	iEo; 	;"shiny-edge-color;"shiny_edge_color;@	;	iEo:Sass::Script::String	:
@type:identifier;"
inset;@	;	iE;@	;	iE:@separator:
space;@	;	iE:@prop_syntax:newo:Sass::Tree::PropNode:
@tabsi ;["box-shadow;[ ;o:Sass::Script::List	;[o;	;"shiny-edge-size;"shiny_edge_size;@;iGo;	;"shiny-edge-color;"shiny_edge_color;@;iGo:Sass::Script::String	;	:identifier;"
inset;@;iG;@;iG:@separator:
space;@;iG:@prop_syntax:newu;ã[o:Sass::Script::Variable	:
@name"active:@underscored_name"active:@options{ :
@lineiI0[o:Sass::Tree::RuleNode:
@tabsi :@children[u:Sass::Tree::IfNodeº[o:Sass::Script::Variable	:
@name"experimental:@underscored_name"experimental:@options{ :
@lineiJ0[o:Sass::Tree::PropNode:
@tabsi ;["-webkit-box-shadow:@children[ :@valueo:Sass::Script::List	;[o; 	;"shiny-edge-size;"shiny_edge_size;@	;	iKo; 	;"shiny-edge-active-color;"shiny_edge_active_color;@	;	iKo:Sass::Script::String	:
@type:identifier;"
inset;@	;	iK;@	;	iK:@separator:
space;@	;	iK:@prop_syntax:newo:Sass::Tree::PropNode;i ;["box-shadow;[ :@valueo:Sass::Script::List	;[o; 	;"shiny-edge-size;"shiny_edge_size;@	;	iMo; 	;"shiny-edge-active-color;"shiny_edge_active_color;@	;	iMo:Sass::Script::String	:
@type:identifier;"
inset;@	;	iM;@	;	iM:@separator:
space;@	;	iM:@prop_syntax:new;@	:
@rule["&:active;	iI:@parsed_ruleso:"Sass::Selector::CommaSequence:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
;[o:Sass::Selector::Parent:@filename" ;	iIo:Sass::Selector::Pseudo
;["active;:
class;@%;	iI:	@arg0;@%:@sourceso:Set:
@hash{ :@subject0;	iI;@%;	iI:@has_childrenT;@;iC;T;0;[[o;;"active;"active;@o;;T;@;iCo;
;	;
;[ ;["5/* We use this to add transitions to elements */;@;iPo;;"single-transition;[u;	[o:Sass::Script::Variable	:
@name"experimental:@underscored_name"experimental:@options{ :
@lineiR0[o:Sass::Tree::PropNode:
@tabsi ;["-webkit-transition:@children[ :@valueo:Sass::Script::List	;[o; 	;"property;"property;@	;	iSo; 	;"
speed;"
speed;@	;	iSo; 	;"	ease;"	ease;@	;	iS;@	;	iS:@separator:
space;@	;	iS:@prop_syntax:newo;
;i ;["-moz-transition;[ ;o;	;[o; 	;"property;"property;@	;	iTo; 	;"
speed;"
speed;@	;	iTo; 	;"	ease;"	ease;@	;	iT;@	;	iT;;;@	;	iT;;o;;i ;["transition;[ ;o;	;[o;	;"property;"property;@;iVo;	;"
speed;"
speed;@;iVo;	;"	ease;"	ease;@;iV;@;iV;; ;@;iV;!;";@;iQ;T;0;[[o;;"property;"property;@o;	;	;;"all;@;iQ[o;;"
speed;"
speed;@o:Sass::Script::Number:@numerator_units["ms;i,;@:@original"
300ms;iQ:@denominator_units[ [o;;"	ease;"	ease;@o;	;	;;"ease-out;@;iQo;
;	;
;[ ;["@/* We use this to add box-sizing across browser prefixes */;@;iYo;;"box-sizing;[u;<[o:Sass::Script::Variable	:
@name"experimental:@underscored_name"experimental:@options{ :
@linei[0[o:Sass::Tree::PropNode:
@tabsi ;["-moz-box-sizing:@children[ :@valueo; 	;"	type;"	type;@	;	i\;@	;	i\:@prop_syntax:newo;
;i ;["-webkit-box-sizing;[ ;o; 	;"	type;"	type;@	;	i];@	;	i];;o;;i ;["box-sizing;[ ;o;	;"	type;"	type;@;i_;@;i_;!;";@;iZ;T;0;[[o;;"	type;"	type;@o;	;	;;"border-box;@;iZo;
;	;
;[ ;["6/* We use this to create equilateral triangles */;@;ibo;;"css-triangle;[o;;i ;["content;[ ;o;;	;;""";@;@;id;!;"o;;i ;["display;[ ;o;;	;;"
block;@;@;ie;!;"o;;i ;["
width;[ ;o;;	;;"0;@;@;if;!;"o;;i ;["height;[ ;o;;	;;"0;@;@;ig;!;"o;;i ;["border;[ ;o;	;[o;	;	;;"
inset;@;iho;	;"triangle-size;"triangle_size;@;ih;@;ih;; ;@;ih;!;"u;d[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"top;@:
@lineii;ii:@operand1o:Sass::Script::Variable	:
@name"triangle-direction:@underscored_name"triangle_direction;@;ii:@operator:eq0[o:Sass::Tree::PropNode:
@tabsi ;["border-color:@children[ ;o:Sass::Script::List	;[	o;	;"triangle-color;"triangle_color;@;ijo;	;	;
;"transparent;@;ijo;	;	;
;"transparent;@;ijo;	;	;
;"transparent;@;ij;@;ij:@separator:
space;@;ij:@prop_syntax:newo;;i ;["border-top-style;[ ;o;;	;
;"
solid;@;@;ik;;u;j[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"bottom;@:
@lineim;im:@operand1o:Sass::Script::Variable	:
@name"triangle-direction:@underscored_name"triangle_direction;@;im:@operator:eq0[o:Sass::Tree::PropNode:
@tabsi ;["border-color:@children[ ;o:Sass::Script::List	;[	o;	;	;
;"transparent;@;ino;	;	;
;"transparent;@;ino;	;"triangle-color;"triangle_color;@;ino;	;	;
;"transparent;@;in;@;in:@separator:
space;@;in:@prop_syntax:newo;;i ;["border-bottom-style;[ ;o;;	;
;"
solid;@;@;io;;u;f[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"	left;@:
@lineiq;iq:@operand1o:Sass::Script::Variable	:
@name"triangle-direction:@underscored_name"triangle_direction;@;iq:@operator:eq0[o:Sass::Tree::PropNode:
@tabsi ;["border-color:@children[ ;o:Sass::Script::List	;[	o;	;	;
;"transparent;@;iro;	;	;
;"transparent;@;iro;	;	;
;"transparent;@;iro;	;"triangle-color;"triangle_color;@;ir;@;ir:@separator:
space;@;ir:@prop_syntax:newo;;i ;["border-left-style;[ ;o;;	;
;"
solid;@;@;is;;u;h[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"
right;@:
@lineiu;iu:@operand1o:Sass::Script::Variable	:
@name"triangle-direction:@underscored_name"triangle_direction;@;iu:@operator:eq0[o:Sass::Tree::PropNode:
@tabsi ;["border-color:@children[ ;o:Sass::Script::List	;[	o;	;	;
;"transparent;@;ivo;	;"triangle-color;"triangle_color;@;ivo;	;	;
;"transparent;@;ivo;	;	;
;"transparent;@;iv;@;iv:@separator:
space;@;iv:@prop_syntax:newo;;i ;["border-right-style;[ ;o;;	;
;"
solid;@;@;iw;;;@;ic;T;0;[[o;;"triangle-size;"triangle_size;@0[o;;"triangle-color;"triangle_color;@0[o;;"triangle-direction;"triangle_direction;@0o;
;	;
;[ ;[")/* We use this to do clear floats */;@;i{o;;"clearfix;[o;;i ;["
*zoom;[ ;o;;	;;"1;@;@;i};!;"o:Sass::Tree::RuleNode;i ;[o;;i ;["content;[ ;o;;	;;"" ";@;@;i~;!;"o;;i ;["display;[ ;o;;	;;"
table;@;@;i~;!;";@:
@rule["&:before, &:after;i~:@parsed_ruleso:"Sass::Selector::CommaSequence:@members[o:Sass::Selector::Sequence;+[o:#Sass::Selector::SimpleSequence
;+[o:Sass::Selector::Parent:@filename" ;i~o:Sass::Selector::Pseudo
;["before;	:
class;/@ð;i~:	@arg0;/@ð:@sourceso:Set:
@hash{ :@subject0;i~o;,;+[o;-
;+[o;.;/@ð;i~o;0
;["
after;	;1;/@ð;i~;20;/@ð;3o;4;5{ ;60;i~;/@ð;i~;To;';i ;[o;;i ;["
clear;[ ;o;;	;;"	both;@;@;i;!;";@;(["&:after;i;)o;*;+[o;,;+[o;-
;+[o;.;/" ;io;0
;["
after;	;1;/@;i;20;/@;3o;4;5{ ;60;i;/@;i;T;@;i|;T;0;[ o;
;	;
;[ ;["@/* We use this to add a glowing effect to block elements */;@;i~o;;"block-glowing-effect;[u;7[o:Sass::Script::Variable	:
@name"experimental:@underscored_name"experimental:@options{ :
@linei0[o:Sass::Tree::PropNode:
@tabsi ;["-webkit-transition:@children[ :@valueo:Sass::Script::List	;[o;	;[o:Sass::Script::String	:
@type:identifier;"-webkit-box-shadow;@	;	io; 	;"fade-time;"fade_time;@	;	i;@	;	i:@separator:
spaceo;	;[o;	;;;"border-color;@	;	io; 	;"fade-time;"fade_time;@	;	io;	;;;"ease-in-out;@	;	i;@	;	i;;;@	;	i;:
comma;@	;	i:@prop_syntax:newo;
;i ;["-moz-transition;[ ;o;	;[o;	;[o;	;;;"-moz-box-shadow;@	;	io; 	;"fade-time;"fade_time;@	;	i;@	;	i;;o;	;[o;	;;;"border-color;@	;	io; 	;"fade-time;"fade_time;@	;	io;	;;;"ease-in-out;@	;	i;@	;	i;;;@	;	i;;;@	;	i;;o;;i ;["transition;[ ;o;	;[o;	;[o;	;	;;"box-shadow;@;io;	;"fade-time;"fade_time;@;i;@;i;; o;	;[o;	;	;;"border-color;@;io;	;"fade-time;"fade_time;@;io;	;	;;"ease-in-out;@;i;@;i;; ;@;i;:
comma;@;i;!;"o;';i ;[u;Ë[o:Sass::Script::Variable	:
@name"experimental:@underscored_name"experimental:@options{ :
@linei0[o:Sass::Tree::PropNode:
@tabsi ;["-webkit-box-shadow:@children[ :@valueo:Sass::Script::List	;[	o:Sass::Script::Number:@numerator_units[ ;i ;@	:@original"0;	i:@denominator_units[ o;;[ ;i ;@	;"0;	i;@o;;["px;i
;@	;"5px;	i;[ o; 	;"glowing-effect-color;"glowing_effect_color;@	;	i;@	;	i:@separator:
space;@	;	i:@prop_syntax:newo;
;i ;["-moz-box-shadow;[ ;o;	;[	o;;[ ;i ;@	;"0;	i;@o;;[ ;i ;@	;"0;	i;@o;;["px;i
;@	;"5px;	i;[ o; 	;"glowing-effect-color;"glowing_effect_color;@	;	i;@	;	i;;;@	;	i;;o;;i ;["box-shadow;[ ;o;	;[	o;#;$[ ;i ;@;%"0;i;&[ o;#;$[ ;i ;@;%"0;i;&@Bo;#;$["px;i
;@;%"5px;i;&[ o;	;"glowing-effect-color;"glowing_effect_color;@;i;@;i;; ;@;i;!;"o;;i ;["border-color;[ ;o;	;"glowing-effect-color;"glowing_effect_color;@;i;@;i;!;";@;(["&:o;	;"selector;"selector;@;i;i;T;@;i;T;0;[[o;;"selector;"selector;@o;	;	;;"
focus;@;i[o;;"fade-time;"fade_time;@o;#;$["ms;i,;@;%"
300ms;i;&[ [o;;"glowing-effect-color;"glowing_effect_color;@o:Sass::Script::Funcall;"fade-out;@:@keywords{ ;i;0;[o;	;"primary-color;"primary_color;@;io;#;$[ ;f	0.25;@;%"	0.25;i;&@Bo;
;	;
;[ ;["%/*
 * Foundation Variables
 * */;@;io;
;	;
;[ ;["/* The default font-size is set to 100% of the browser style sheet (usually 16px)
 * for compatibility with brower-based text zoom or user-set defaults. */;@;io;
;	;
;[ ;["/* Since the typical default browser font-size is 16px, that makes the calculation for grid size.
 * If you want your base font-size to be different and not have it effect the grid breakpoints,
 * set $em-base to $base-font-size and make sure $base-font-size is a px value. */;@;io;;"base-font-size;[ ;"!default;@;o;#;$["%;ii;@;%"	100%;i;&[ ;io;
;	;
;[ ;["B/* $base-line-height is 24px while $base-font-size is 16px */;@;io;;"base-line-height;[ ;"!default;@;o;#;$["%;i;@;%"	150%;i;&[ ;io;
;	;
;[ ;["M/* This is the default html and body font-size for the base em value. */;@;io;;"em-base;[ ;"!default;@;o;#;$[ ;i;@;%"16;i ;&@B;i o;
;	;
;[ ;["7/* It strips the unit of measure and returns it */;@;i¢o:Sass::Tree::FunctionNode;"strip-unit;[o:Sass::Tree::ReturnNode	;[ ;@;o:Sass::Script::Operation
;@:@operand2o;<
;@;=o;#;$[ ;i;@;%"1;i¤;&@B;i¤:@operand1o;<
;@;=o;#;$[ ;i ;@;%"0;i¤;&@B;i¤;>o;	;"num;"num;@;i¤:@operator:
times;?:	plus;i¤;>o;	;"num;"num;@;i¤;?:div;i¤;@;i£;T;0;[[o;;"num;"num;@0o;
;	;
;[ ;["5/* Converts "px" to "em" using the ($)em-base */;@;i§o;:;"convert-to-em;[	o;;"
value;[ ;0;@;o;<
;@;=o;#;$["em;i;@;%"1em;i©;&[ ;i©;>o;<
;@;=o;8;"strip-unit;@;9{ ;i©;0;[o;	;"em-base;"em_base;@;i©;i©;>o;8;"strip-unit;@;9{ ;i©;0;[o;	;"
value;"
value;@;i©;?;B;?;@;i©u;|[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::Number:@numerator_units["em:@valuei ;@:@original"0em:
@lineiª:@denominator_units[ ;iª:@operand1o:Sass::Script::Variable	:
@name"
value:@underscored_name"
value;@;iª:@operator:eq0[o:Sass::Tree::VariableNode;"
value:@children[ :@guarded0;@:
@expro;;	[ ;
i ;@;"0;iª;[ ;iªo;
;	;
;[ ;["/* Turn 0em into 0 */;@;iªo;;	;[ ;@;o;	;"
value;"
value;@;i«;i«;@;i¨;T;0;[[o;;"
value;"
value;@0o;
;	;
;[ ;["/* Working in ems is annoying. Think in pixels by using this handy function, emCalc(#)
 * Just enter the number, no need to mention "px" */;@;i®o;:;"emCalc;[o;;"max;[ ;0;@;o;8;"length;@;9{ ;i±;0;[o;	;"values;"values;@;i±;i±o;
;	;
;[ ;["4/* Get the total number of parameters passed */;@;i±o;
;	;
;[ ;["¢/* If there is only 1 parameter, then return it as an integer.
 * This is done because a list can't be multiplied or divided even if it contains a single value */;@;i³u;î[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::Number:@numerator_units[ :@valuei;@:@original"1:
@lineiµ:@denominator_units[ ;iµ:@operand1o:Sass::Script::Variable	:
@name"max:@underscored_name"max;@;iµ:@operator:eq0[o:Sass::Tree::ReturnNode	:@children[ ;@:
@expro:Sass::Script::Funcall;"convert-to-em;@:@keywords{ ;iµ:@splat0:
@args[o;;"nth;@;{ ;iµ;0;[o;	;"values;"values;@;iµo;;	[ ;
i;@;"1;iµ;@;iµo;;"emValues;[ ;0;@;o;	;[ ;@;i·;; ;i·o;
;	;
;[ ;["E/* This will eventually store the converted $values in a list */;@;i·o:Sass::Tree::ForNode;[o;;"emValues;[ ;0;@;o;8;"append;@;9{ ;i¹;0;[o;	;"emValues;"emValues;@;i¹o;8;"convert-to-em;@;9{ ;i¹;0;[o;8;"nth;@;9{ ;i¹;0;[o;	;"values;"values;@;i¹o;	;"i;"i;@;i¹;i¹:@exclusiveF;@;i¸:
@fromo;#;$[ ;i;@;%"1;i¸;&@B:	@var"i;T:@too;	;"max;"max;@;i¸o;;	;[ ;@;o;	;"emValues;"emValues;@;i»;i»;@;i°;T;o;;"values;"values;{ ;[ o;
;	;
;[ ;["}/* Maybe you want to create rems and pixels
 * @function remCalc($pxWidth) {
 *   @return $pxWidth / $em-base * 1rem;
 * } */;@;i¾o;
;	;
;[ ;["8/* We use these to control various global styles */;@;iÃo;;"body-bg;[ ;"!default;@;o:Sass::Script::Color	;0:@attrs{	:	blueiÿ:rediÿ:
alphai:
greeniÿ;@;iÄ;iÄo;;"body-font-color;[ ;"!default;@;o;H	;0;I{	;Ji';Ki';Li;Mi';@;iÅ;iÅo;;"body-font-family;[ ;"!default;@;o;	;[
o;	;	:string;"Helvetica Neue;@;iÆo;	;	;N;"Helvetica;@;iÆo;	;	;;"Helvetica;@;iÆo;	;	;;"
Arial;@;iÆo;	;	;;"sans-serif;@;iÆ;@;iÆ;;7;iÆo;;"body-font-weight;[ ;"!default;@;o;	;	;;"normal;@;iÇ;iÇo;;"body-font-style;[ ;"!default;@;o;	;	;;"normal;@;iÈ;iÈo;
;	;
;[ ;["0/* We use this to control font-smoothing */;@;iÊo;;"font-smoothing;[ ;"!default;@;o;	;	;;"subpixel-antialiased;@;iË;iËo;
;	;
;[ ;[":/* We use these to control text direction settings */;@;iÍo;;"text-direction;[ ;"!default;@;o;	;	;;"ltr;@;iÎ;iÎo;
;	;
;[ ;["h/* NOTE: No need to change this conditional statement, $text-direction variable controls it all. */;@;iÐo;;"default-float;[ ;"!default;@;o;	;	;;"	left;@;iÑ;iÑo;;"opposite-direction;[ ;"!default;@;o;	;	;;"
right;@;iÒ;iÒu;¼[o:Sass::Script::Operation
:@options{ :@operand2o:Sass::Script::String	:
@type:identifier:@value"ltr;@:
@lineiÓ;iÓ:@operand1o:Sass::Script::Variable	:
@name"text-direction:@underscored_name"text_direction;@;iÓ:@operator:equ:Sass::Tree::IfNode÷[00[o:Sass::Tree::VariableNode:
@name"default-float:@children[ :@guarded0:@options{ :
@expro:Sass::Script::String	:
@type:identifier:@value"
right;	@
:
@linei×;i×o; ;"opposite-direction;[ ;0;	@
;
o;	;;;"	left;	@
;iØ;iØ[o:Sass::Tree::VariableNode;"default-float:@children[ :@guarded0;@:
@expro;	;	;
;"	left;@;iÔ;iÔo;;"opposite-direction;[ ;0;@;o;	;	;
;"
right;@;iÕ;iÕo;
;	;
;[ ;["4/* We use these as default colors throughout */;@;iÛo;;"primary-color;[ ;"!default;@;o;H	;0;I{	;JiË;Ki0;Li;Mi¦;@;iÜ;iÜo;;"secondary-color;[ ;"!default;@;o;H	;0;I{	;Jié;Kié;Li;Mié;@;iÝ;iÝo;;"alert-color;[ ;"!default;@;o;H	;0;I{	;Ji;KiÆ;Li;Mi;@;iÞ;iÞo;;"success-color;[ ;"!default;@;o;H	;0;I{	;Ji(;Kib;Li;Mi¤;@;iß;ißo;
;	;
;[ ;["W/* We use these to make sure border radius matches unless we want it different. */;@;iáo;;"global-radius;[ ;"!default;@;o;#;$["px;i;@;%"3px;iâ;&[ ;iâo;;"global-rounded;[ ;"!default;@;o;#;$["px;iè;@;%"1000px;iã;&[ ;ião;
;	;
;[ ;["L/* We use these to control inset shadow shiny edges and depressions. */;@;iåo;;"shiny-edge-size;[ ;"!default;@;o;	;[o;#;$[ ;i ;@;%"0;iæ;&@Bo;#;$["px;i;@;%"1px;iæ;&[ o;#;$[ ;i ;@;%"0;iæ;&@B;@;iæ;; ;iæo;;"shiny-edge-color;[ ;"!default;@;o;8;"	rgba;@;9{ ;iç;0;[o;H	;0;I{	;Jiÿ;Kiÿ;Li;Miÿ;@;iço;#;$[ ;f0.5;@;%"0.5;iç;&@B;iço;;"shiny-edge-active-color;[ ;"!default;@;o;8;"	rgba;@;9{ ;iè;0;[o;H	;0;I{	;Ji ;Ki ;Li;Mi ;@;ièo;#;$[ ;f0.20000000000000001 ;@;%"0.2;iè;&@B;ièo;
;	;
;[ ;["[/* We use this to control whether or not CSS classes come through in the gem files. */;@;iêo;;"include-html-classes;[ ;"!default;@;o;;T;@;ië;iëo;;"include-print-styles;[ ;"!default;@;o;;T;@;iì;iìo;;" include-html-global-classes;[ ;"!default;@;o;	;"include-html-classes;"include_html_classes;@;ií;iío;
;	;
;[ ;["/* Media Queries */;@;iïo;;"small-screen;[ ;"!default;@;o;#;$["px;i ;@;%"
768px;ið;&[ ;iðo;;"medium-screen;[ ;"!default;@;o;#;$["px;i ;@;%"1280px;iñ;&[ ;iño;;"large-screen;[ ;"!default;@;o;#;$["px;i ;@;%"1440px;iò;&[ ;iòo;;"screen;[ ;"!default;@;o;	;	;N;"only screen;@;iô;iôo;;"
small;[ ;"!default;@;o:&Sass::Script::StringInterpolation
:@aftero;	;	;N;");@;iõ;@;iõ:	@mido;	;"small-screen;"small_screen;@;iõ:@beforeo;	;	;N;"!only screen and (min-width: ;@;iõ;iõo;;"medium;[ ;"!default;@;o;O
;Po;	;	;N;");@;iö;@;iö;Qo;	;"medium-screen;"medium_screen;@;iö;Ro;	;	;N;" only screen and (min-width:;@;iö;iöo;;"
large;[ ;"!default;@;o;O
;Po;	;	;N;");@;i÷;@;i÷;Qo;	;"large-screen;"large_screen;@;i÷;Ro;	;	;N;" only screen and (min-width:;@;i÷;i÷o;;"landscape;[ ;"!default;@;o;	;	;N;"-only screen and (orientation: landscape);@;iø;iøo;;"portrait;[ ;"!default;@;o;	;	;N;",only screen and (orientation: portrait);@;iù;iùo;
;	;
;[ ;["w/*We use this as cursors values for enabling the option of having custom cursors in the whole site's stylesheet */;@;iûo;;"cursor-crosshair-value;[ ;"!default;@;o;	;	;;"crosshair;@;iü;iüo;;"cursor-default-value;[ ;"!default;@;o;	;	;;"default;@;iý;iýo;;"cursor-pointer-value;[ ;"!default;@;o;	;	;;"pointer;@;iþ;iþo;;"cursor-help-value;[ ;"!default;@;o;	;	;;"	help;@;iÿ;iÿo;;"cursor-text-value;[ ;"!default;@;o;	;	;;"	text;@;i ;i u;[o:Sass::Script::Variable	:
@name" include-html-global-classes:@underscored_name" include_html_global_classes:@options{ :
@linei0[#o:Sass::Tree::CommentNode
:
@type:silent:@children[ :@value["F/* Set box-sizing globally to handle padding and border widths */;@	;	io:Sass::Tree::RuleNode:
@tabsi ;[o:Sass::Tree::MixinNode;"box-sizing;[ ;@	:@keywords{ ;	i	:@splat0:
@args[o:Sass::Script::String	;:identifier;"border-box;@	;	i	;@	:
@rule["*,
  *:before,
  *:after;	i:@parsed_ruleso:"Sass::Selector::CommaSequence:@members[o:Sass::Selector::Sequence;[o:#Sass::Selector::SimpleSequence
;[o:Sass::Selector::Universal:@filename" ;	i:@namespace0;@!:@sourceso:Set:
@hash{ :@subject0;	io;;["
o;
;[o;;@!;	i;0o:Sass::Selector::Pseudo
;["before;:
class;@!;	i:	@arg0;@!; o;!;"{ ;#0;	io;;["
o;
;[o;;@!;	i;0o;$
;["
after;;%;@!;	i;&0;@!; o;!;"{ ;#0;	i;@!;	i:@has_childrenTo;;i ;[o:Sass::Tree::PropNode;i ;["font-size;[ ;o; 	;"base-font-size;"base_font_size;@	;	i;@	;	i:@prop_syntax:new;@	;["html,
  body;	i;o;;[o;;[o;
;[o:Sass::Selector::Element	;["	html;" ;	i;0;@N; o;!;"{ ;#0;	io;;["
o;
;[o;+	;["	body;@N;	i;0;@N; o;!;"{ ;#0;	i;@N;	i;'To;

;;;[ ;["/* Default body styles */;@	;	io;;i ;[o;(;i ;["background;[ ;o; 	;"body-bg;"body_bg;@	;	i;@	;	i;);*o;(;i ;["
color;[ ;o; 	;"body-font-color;"body_font_color;@	;	i;@	;	i;);*o;(;i ;["padding;[ ;o;;;;"0;@	;@	;	i;);*o;(;i ;["margin;[ ;o;;;;"0;@	;@	;	i;);*o;(;i ;["font-family;[ ;o; 	;"body-font-family;"body_font_family;@	;	i;@	;	i;);*o;(;i ;["font-weight;[ ;o; 	;"body-font-weight;"body_font_weight;@	;	i;@	;	i;);*o;(;i ;["font-style;[ ;o; 	;"body-font-style;"body_font_style;@	;	i;@	;	i;);*o;(;i ;["line-height;[ ;o;;;;"1;@	;@	;	i;);*o;

;;;[ ;["F/* Set to $base-line-height to take on browser default of 150% */;@	;	io;(;i ;["position;[ ;o;;;;"relative;@	;@	;	i;);*o;(;i ;["cursor;[ ;o; 	;"cursor-default-value;"cursor_default_value;@	;	i;@	;	i;);*;@	;["	body;	i;o;;[o;;[o;
;[o;+	;["	body;" ;	i;0;@­; o;!;"{ ;#0;	i;@­;	i;'To;;i ;[o;(;i ;["cursor;[ ;o; 	;"cursor-pointer-value;"cursor_pointer_value;@	;	i;@	;	i;);*;@	;["a:hover;	i;o;;[o;;[o;
;[o;+	;["a;" ;	i;0o;$
;["
hover;;%;@Ä;	i;&0;@Ä; o;!;"{ ;#0;	i;@Ä;	i;'To;

;;;[ ;["</* Override outline from normalize, we don't like it */;@	;	io;;i ;[o;(;i ;["outline;[ ;o;;;;"	none;@	;@	;	i ;);*;@	;["a:focus;	i ;o;;[o;;[o;
;[o;+	;["a;" ;	i ;0o;$
;["
focus;;%;@á;	i ;&0;@á; o;!;"{ ;#0;	i ;@á;	i ;'To;

;;;[ ;["B/* Grid Defaults to get images and embeds to work properly */;@	;	i"o;;i ;[o;(;i ;["max-width;[ ;o;;;;"	100%;@	;@	;	i%;);*o;(;i ;["height;[ ;o;;;;"	auto;@	;@	;	i%;);*;@	;["img,
  object,
  embed;	i%;o;;[o;;[o;
;[o;+	;["img;" ;	i%;0;@; o;!;"{ ;#0;	i%o;;["
o;
;[o;+	;["object;@;	i%;0;@; o;!;"{ ;#0;	i%o;;["
o;
;[o;+	;["
embed;@;	i%;0;@; o;!;"{ ;#0;	i%;@;	i%;'To;;i ;[o;(;i ;["height;[ ;o;;;;"	100%;@	;@	;	i(;);*;@	;["object,
  embed;	i(;o;;[o;;[o;
;[o;+	;["object;" ;	i(;0;@.; o;!;"{ ;#0;	i(o;;["
o;
;[o;+	;["
embed;@.;	i(;0;@.; o;!;"{ ;#0;	i(;@.;	i(;'To;;i ;[o;(;i ;["-ms-interpolation-mode;[ ;o;;;;"bicubic;@	;@	;	i););*;@	;["img;	i);o;;[o;;[o;
;[o;+	;["img;" ;	i);0;@N; o;!;"{ ;#0;	i);@N;	i);'To;;i ;[o;;i ;[o;(;i ;["max-width;[ ;o:Sass::Script::List	;[o;	;;;"	none;@	;	i/o;	;;;"!important;@	;	i/;@	;	i/:@separator:
space;@	;	i/;);*;@	;["img,
    embed,
    object;	i/;o;;[o;;[o;
;[o;+	;["img;" ;	i/;0;@j; o;!;"{ ;#0;	i/o;;["
o;
;[o;+	;["
embed;@j;	i/;0;@j; o;!;"{ ;#0;	i/o;;["
o;
;[o;+	;["object;@j;	i/;0;@j; o;!;"{ ;#0;	i/;@j;	i/;'T;@	;["#map_canvas,
  .map_canvas;	i,;o;;[o;;[o;
;[o:Sass::Selector::Id;["map_canvas;" ;	i,;@; o;!;"{ ;#0;	i,o;;["
o;
;[o:Sass::Selector::Class;["map_canvas;@;	i,;@; o;!;"{ ;#0;	i,;@;	i,;'To;

;;;[ ;[",/* Miscellaneous useful HTML classes */;@	;	i3o;;i ;[o;(;i ;["
float;[ ;o;,	;[o;	;;;"	left;@	;	i4o;	;;;"!important;@	;	i4;@	;	i4;-;.;@	;	i4;);*;@	;["
.left;	i4;o;;[o;;[o;
;[o;0;["	left;" ;	i4;@´; o;!;"{ ;#0;	i4;@´;	i4;'To;;i ;[o;(;i ;["
float;[ ;o;,	;[o;	;;;"
right;@	;	i5o;	;;;"!important;@	;	i5;@	;	i5;-;.;@	;	i5;);*;@	;[".right;	i5;o;;[o;;[o;
;[o;0;["
right;" ;	i5;@Î; o;!;"{ ;#0;	i5;@Î;	i5;'To;;i ;[o;(;i ;["text-align;[ ;o;,	;[o;	;;;"	left;@	;	i6o;	;;;"!important;@	;	i6;@	;	i6;-;.;@	;	i6;);*;@	;[".text-left;	i6;o;;[o;;[o;
;[o;0;["text-left;" ;	i6;@è; o;!;"{ ;#0;	i6;@è;	i6;'To;;i ;[o;(;i ;["text-align;[ ;o;,	;[o;	;;;"
right;@	;	i7o;	;;;"!important;@	;	i7;@	;	i7;-;.;@	;	i7;);*;@	;[".text-right;	i7;o;;[o;;[o;
;[o;0;["text-right;" ;	i7;@; o;!;"{ ;#0;	i7;@;	i7;'To;;i ;[o;(;i ;["text-align;[ ;o;,	;[o;	;;;"center;@	;	i8o;	;;;"!important;@	;	i8;@	;	i8;-;.;@	;	i8;);*;@	;[".text-center;	i8;o;;[o;;[o;
;[o;0;["text-center;" ;	i8;@; o;!;"{ ;#0;	i8;@;	i8;'To;;i ;[o;(;i ;["text-align;[ ;o;,	;[o;	;;;"justify;@	;	i9o;	;;;"!important;@	;	i9;@	;	i9;-;.;@	;	i9;);*;@	;[".text-justify;	i9;o;;[o;;[o;
;[o;0;["text-justify;" ;	i9;@6; o;!;"{ ;#0;	i9;@6;	i9;'To;;i ;[o;(;i ;["display;[ ;o;;;;"	none;@	;@	;	i:;);*;@	;["
.hide;	i:;o;;[o;;[o;
;[o;0;["	hide;" ;	i:;@L; o;!;"{ ;#0;	i:;@L;	i:;'To;

;;;[ ;["â/* Font smoothing
 * Antialiased font smoothing works best for light text on a dark background.
 * Apply to single elements instead of globally to body.
 * Note this only applies to webkit-based desktop browsers on the Mac. */;@	;	i<o;;i ;[o;(;i ;["-webkit-font-smoothing;[ ;o;;;;"antialiased;@	;@	;	i@;);*;@	;[".antialiased;	i@;o;;[o;;[o;
;[o;0;["antialiased;" ;	i@;@f; o;!;"{ ;#0;	i@;@f;	i@;'To;

;;;[ ;["W/* Get rid of gap under images by making them display: inline-block; by default */;@	;	iBo;;i ;[o;(;i ;["display;[ ;o;;;;"inline-block;@	;@	;	iD;);*o;(;i ;["vertical-align;[ ;o;;;;"middle;@	;@	;	iE;);*;@	;["img;	iC;o;;[o;;[o;
;[o;+	;["img;" ;	iC;0;@; o;!;"{ ;#0;	iC;@;	iC;'To;

;;;[ ;["(/*
 * Global resets for forms
 * */;@	;	iHo;

;;;[ ;[";/* Make sure textarea takes on height automatically */;@	;	iLo;;i ;[o;(;i ;["height;[ ;o;;;;"	auto;@	;@	;	iM;);*o;(;i ;["min-height;[ ;o;;;;"	50px;@	;@	;	iM;);*;@	;["textarea;	iM;o;;[o;;[o;
;[o;+	;["textarea;" ;	iM;0;@ª; o;!;"{ ;#0;	iM;@ª;	iM;'To;

;;;[ ;["5/* Make select elements 100% width by default */;@	;	iOo;;i ;[o;(;i ;["
width;[ ;o;;;;"	100%;@	;@	;	iP;);*;@	;["select;	iP;o;;[o;;[o;
;[o;+	;["select;" ;	iP;0;@Ä; o;!;"{ ;#0;	iP;@Ä;	iP;'T;@;i;T